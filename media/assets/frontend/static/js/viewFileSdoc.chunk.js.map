{"version":3,"sources":["pages/sdoc-editor/external-operations.js","pages/sdoc-editor/index.js","view-file-sdoc.js","_i18n/i18n-sdoc-editor.js"],"names":["ExternalOperations","props","onInternalLinkToggle","setState","isShowInternalLinkDialog","state","toggleStar","isStarred","repoID","docPath","seafileAPI","unstarItem","then","res","catch","error","errorMsg","Utils","getErrorMsg","toaster","danger","starItem","eventBus","EventBus","getInstance","this","unsubscribeInternalLinkEvent","subscribe","EXTERNAL_EVENT","INTERNAL_LINK_CLICK","unsubscribeStar","TOGGLE_STAR","path","onInternalLinkDialogToggle","React","Component","SdocEditor","window","app","pageOptions","seafile","config","serviceURL","avatarURL","siteRoot","userInfo","username","name","repoName","parentDir","filePerm","docName","docUuid","seadocAccessToken","seadocServerUrl","assetsUrl","isSdocRevision","isPublished","originFilename","revisionCreatedAt","isOpenSocket","serviceUrl","accessToken","sdocServer","docPerm","historyURL","generateHistoryURL","parentFolderURL","encodePath","isShowInternalLink","isStarIconShown","revisionURL","generateRevisionURL","ReactDom","render","i18n","fallback","document","getElementById","lang","use","Backend","LanguageDetector","initReactI18next","init","lng","fallbackLng","ns","defaultNS","whitelist","backend","loadPath","mediaUrl","debug","interpolation","escapeValue","load","react","wait"],"mappings":"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","file":"static/js/viewFileSdoc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EventBus, EXTERNAL_EVENT } from '@seafile/sdoc-editor';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../../components/toast';\nimport InternalLinkDialog from '../../components/dialog/internal-link-dialog';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  docPath: PropTypes.string.isRequired,\n  isStarred: PropTypes.bool.isRequired,\n  toggleStar: PropTypes.func.isRequired\n};\n\nclass ExternalOperations extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowInternalLinkDialog: false,\n    };\n  }\n\n  componentDidMount() {\n    const eventBus = EventBus.getInstance();\n    this.unsubscribeInternalLinkEvent = eventBus.subscribe(EXTERNAL_EVENT.INTERNAL_LINK_CLICK, this.onInternalLinkToggle);\n    this.unsubscribeStar = eventBus.subscribe(EXTERNAL_EVENT.TOGGLE_STAR, this.toggleStar);\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeInternalLinkEvent();\n    this.unsubscribeStar();\n  }\n\n  onInternalLinkToggle = () => {\n    this.setState({isShowInternalLinkDialog: !this.state.isShowInternalLinkDialog});\n  }\n\n  toggleStar = () => {\n    const { isStarred, repoID, docPath  } = this.props;\n    if (isStarred) {\n      seafileAPI.unstarItem(repoID, docPath).then((res) => {\n        this.props.toggleStar(false);\n      }).catch((error) => {\n        const errorMsg = Utils.getErrorMsg(error);\n        toaster.danger(errorMsg);\n      });\n    } else {\n      seafileAPI.starItem(repoID, docPath).then((res) => {\n        this.props.toggleStar(true);\n      }).catch((error) => {\n        const errorMsg = Utils.getErrorMsg(error);\n        toaster.danger(errorMsg);\n      });\n    }\n  }\n\n  render() {\n    const { repoID, docPath } = this.props;\n    const { isShowInternalLinkDialog } = this.state;\n    return (\n      <>\n        {isShowInternalLinkDialog && (\n          <InternalLinkDialog\n            repoID={repoID}\n            path={docPath}\n            onInternalLinkDialogToggle={this.onInternalLinkToggle}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nExternalOperations.propTypes = propTypes;\n\nexport default ExternalOperations;\n","import React, { Fragment } from 'react';\nimport { SimpleEditor } from '@seafile/sdoc-editor';\nimport ExternalOperations from './external-operations';\n\nexport default class SdocEditor extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const { isStarred } = window.app.pageOptions;\n    this.state = {\n      isStarred: isStarred\n    };\n  }\n\n  toggleStar = (isStarred) => {\n    this.setState({isStarred: isStarred});\n  }\n\n  render() {\n    const { repoID, docPath } = window.seafile;\n    const { isStarred } = this.state;\n    return (\n      <Fragment>\n        <SimpleEditor isStarred={isStarred} />\n        <ExternalOperations\n          repoID={repoID}\n          docPath={docPath}\n          isStarred={isStarred}\n          toggleStar={this.toggleStar}\n        />\n      </Fragment>\n    );\n  }\n}\n","import React, { Suspense } from 'react';\nimport ReactDom from 'react-dom';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from './_i18n/i18n-sdoc-editor';\nimport { Utils } from './utils/utils';\nimport Loading from './components/loading';\nimport SdocEditor from './pages/sdoc-editor';\n\nconst { serviceURL, avatarURL, siteRoot } = window.app.config;\nconst { username, name } = window.app.userInfo;\nconst {\n  repoID, repoName, parentDir, filePerm,\n  docPath, docName, docUuid, seadocAccessToken, seadocServerUrl, assetsUrl,\n  isSdocRevision, isPublished, originFilename, revisionCreatedAt,\n} = window.app.pageOptions;\n\nwindow.seafile = {\n  repoID,\n  docPath,\n  docName,\n  docUuid,\n  isOpenSocket: true,\n  serviceUrl: serviceURL,\n  accessToken: seadocAccessToken,\n  sdocServer: seadocServerUrl,\n  name,\n  username,\n  avatarURL,\n  siteRoot,\n  docPerm: filePerm,\n  historyURL: Utils.generateHistoryURL(siteRoot, repoID, docPath),\n  parentFolderURL: `${siteRoot}library/${repoID}/${Utils.encodePath(repoName + parentDir)}`,\n  assetsUrl,\n  isShowInternalLink: true,\n  isStarIconShown: true, // for star/unstar\n  isSdocRevision,\n  isPublished,\n  revisionURL: Utils.generateRevisionURL(siteRoot, repoID, docPath),\n  originFilename,\n  revisionCreatedAt,\n};\n\nReactDom.render(\n  <I18nextProvider i18n={ i18n } >\n    <Suspense fallback={<Loading />}>\n      <SdocEditor />\n    </Suspense>\n  </I18nextProvider>,\n  document.getElementById('wrapper')\n);\n","import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\nimport { mediaUrl } from '../utils/constants';\n\nconst lang = window.app.pageOptions.lang;\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    lng: lang,\n    fallbackLng: 'en',\n    ns: ['sdoc-editor'],\n    defaultNS: 'translations',\n\n    whitelist: ['en', 'zh-CN', 'fr', 'de', 'cs', 'es', 'es-AR', 'es-MX', 'ru'],\n\n    backend: {\n      loadPath: mediaUrl + 'sdoc-editor/locales/{{ lng }}/{{ ns }}.json',\n      // loadPath: '/media/locales/{{lng}}/{{ns}}.json',\n    },\n\n    debug: false, // console log if debug: true\n\n    interpolation: {\n      escapeValue: false, // not needed for react!!\n    },\n\n\n    load: 'currentOnly',\n\n    react: {\n      wait: true,\n    }\n  });\n\nexport default i18n;\n"],"sourceRoot":""}