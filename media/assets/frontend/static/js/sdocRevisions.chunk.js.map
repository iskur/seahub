{"version":3,"sources":["pages/sdoc-revisions/index.js"],"names":["moment","locale","window","app","config","lang","sdocRevisions","filename","zipped","forloopLast","repo","viewLibFile","revisions","currentPage","prevPage","nextPage","perPage","pageNext","extraHref","validZipped","JSON","parse","validRevisions","SdocRevisions","renderPerPage","perPageCount","className","classnames","href","renderRevisions","Array","isArray","length","width","gettext","map","revision","nickname","siteRoot","file_path","created_at","format","doc_uuid","renderFooter","id","src","mediaUrl","logoPath","title","siteTitle","alt","logoWidth","height","logoHeight","item","index","slice","target","rel","this","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/sdocRevisions.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport ReactDom from 'react-dom';\nimport moment from 'moment';\nimport classnames from 'classnames';\nimport { siteRoot, mediaUrl, logoPath, siteTitle, logoHeight, logoWidth, gettext } from '../../utils/constants';\nimport '../../css/sdoc-revisions.css';\n\nmoment.locale(window.app.config.lang);\nconst { filename, zipped, forloopLast, repo, viewLibFile, revisions, currentPage, prevPage,\n  nextPage, perPage, pageNext, extraHref } = window.sdocRevisions;\nconst validZipped = JSON.parse(zipped);\nconst validRevisions = JSON.parse(revisions);\n\nclass SdocRevisions extends Component {\n\n  renderPerPage = (perPageCount, className) => {\n    if (perPage === perPageCount) {\n      return (<span className={classnames('', className)}>{perPageCount}</span>);\n    }\n    return (\n      <a href={`?per_page=${perPageCount}${extraHref}`} className={classnames('per-page', className)}>{perPageCount}</a>\n    );\n  }\n\n  renderRevisions = () => {\n    if (!Array.isArray(validRevisions) || validRevisions.length === 0) {\n      return (\n        <div className=\"empty-tips\">\n          <h2 className=\"alc\">{gettext('This file has not revisions yet')}</h2>\n        </div>\n      );\n    }\n    return (\n      <table className=\"file-audit-list\">\n        <thead>\n          <tr>\n            <th width=\"25%\" className=\"user\">{gettext('User')}</th>\n            <th width=\"50%\">{gettext('File_name')}</th>\n            <th width=\"25%\">{gettext('Ctime')}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {validRevisions.map(revision => {\n            return (\n              <tr key={revision.doc_uuid} className=\"sdoc-revision\">\n                <td width=\"25%\" className=\"user\">{revision.nickname}</td>\n                <td width=\"50%\">\n                  <a href={`${siteRoot}lib/${repo['id']}/file${revision.file_path}`}>\n                    {revision.filename}\n                  </a>\n                </td>\n                <td width=\"25%\">{moment(revision.created_at).format('YYYY-MM-DD HH:MM')}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n\n  renderFooter = () => {\n    return (\n      <div id=\"paginator\">\n        {currentPage !== 1 && (\n          <a href={`?page=${prevPage}&per_page=${perPage}${extraHref}`} className=\"mr-1\">{gettext('Previous')}</a>\n        )}\n        {pageNext && (\n          <a href={`?page=${nextPage}&per_page=${perPage}${extraHref}`} className=\"mr-1\">{gettext('Next')}</a>\n        )}\n        {(currentPage !== 1 || pageNext) && (<span className=\"mr-1\">{'|'}</span>)}\n        <span className=\"mr-1\">{gettext('Per page: ')}</span>\n        {this.renderPerPage(25, 'mr-1')}\n        {this.renderPerPage(50, 'mr-1')}\n        {this.renderPerPage(100)}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"header\" className=\"d-flex\">\n          <a href={siteRoot} id=\"logo\">\n            <img src={`${mediaUrl}${logoPath}`} title={siteTitle} alt=\"logo\" width={logoWidth} height={logoHeight} />\n          </a>\n        </div>\n        <div id=\"main\" className=\"container-fluid w100 flex-auto ov-auto sdoc-revisions\">\n          <div id=\"wide-panel-noframe\" className=\"row\">\n            <div className=\"col-md-10 col-md-offset-1\">\n              <h2 className=\"file-access-hd\">\n                <span className=\"op-target mr-1\">{filename}</span>\n                {gettext('Revisions')}\n              </h2>\n              <div className=\"file-audit-list-topbar\">\n                <p className=\"path\">\n                  <span className=\"mr-1\">{gettext('Current Path:')}</span>\n                  {validZipped.map((item, index) => {\n                    if (forloopLast) {\n                      return (<a key={index} href={`${viewLibFile.slice(0, -1)}${item[1]}`} target=\"_blank\" rel=\"noreferrer\">{item[0]}</a>);\n                    }\n                    return (\n                      <Fragment key={index}>\n                        <a href={`${viewLibFile.slice(0, -1)}${item[1]}`} target=\"_blank\" rel=\"noreferrer\">{item[0]}</a>\n                        {index !== validZipped.length - 1 && (\n                          <span className=\"mr-1 ml-1\">{'/'}</span>\n                        )}\n                      </Fragment>\n                    );\n                  })}\n                </p>\n              </div>\n              {this.renderRevisions()}\n              {this.renderFooter()}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nReactDom.render(<SdocRevisions />, document.getElementById('wrapper'));\n"],"sourceRoot":""}