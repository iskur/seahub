{"version":3,"sources":["components/dialog/zip-download-dialog.js","components/shared-link-file-uploader/upload-list-item.js","components/shared-link-file-uploader/forbid-upload-list-item.js","components/shared-link-file-uploader/upload-progress-dialog.js","components/shared-link-file-uploader/file-uploader.js","components/dialog/save-shared-dir-dialog.js","shared-dir-view.js","components/dialog/image-dialog.js","components/dialog/list-taggedfiles-dialog.js","models/draft.js","components/dialog/list-repo-drafts-dialog.js","components/dialog/readme-dialog.js","components/repo-info-bar.js","components/dialog/copy-move-dirent-progress-dialog.js"],"names":["interval","ZipDownloadDialog","props","queryZipProgress","zipToken","state","seafileAPI","then","res","data","failed","clearInterval","setState","isLoading","errorMsg","failed_reason","zipProgress","total","zipped","toFixed","toggleDialog","location","href","fileServerRoot","catch","error","Utils","getErrorMsg","cancelZipTask","this","token","path","repoID","target","length","getShareLinkDirentsZipTask","getShareLinkZipTask","zipDownload","setInterval","isOpen","toggle","gettext","Content","React","Component","className","UPLOAD_UPLOADING","UPLOAD_ERROR","UPLOAD_ISSAVING","UPLOAD_UPLOADED","UploadListItem","onUploadCancel","e","preventDefault","resumableFile","onUploadRetry","formatFileSize","size","uploadState","nextProps","remainingTime","isSaved","progress","Math","round","fileName","newFileName","title","isUploading","role","style","width","formatTime","dangerouslySetInnerHTML","__html","onClick","ForbidUploadListItem","file","msg","replace","maxUploadFileSize","name","colSpan","UploadProgressDialog","onCancelAllUploading","onMinimizeUpload","nativeEvent","stopImmediatePropagation","isMinimized","onCloseUpload","onCloseUploadDialog","uploadBitrate","formatBitRate","uploadedMessage","uploadingMessage","totalProgress","uploadingOptions","uploadedOptions","allFilesUploaded","retryFileList","height","onUploadRetryAll","forbidUploadFileList","map","index","uploadFileList","FileUploader","componentWillUnmount","window","onbeforeunload","dragAndDrop","resumable","disableDropOnDocument","uploader","isUploadProgressDialogShow","bindCallbackHandler","minFileSizeErrorCallback","fileTypeErrorCallback","maxFilesErrorCallback","opts","maxFileSizeErrorCallback","bindEventHandler","on","onChunkingComplete","bind","onFileAdded","filesAddedComplete","onFileProgress","onFileUploadSuccess","onProgress","onComplete","onPause","onFileRetry","onFileError","onError","onBeforeCancel","onCancel","onDragStart","files","errorCount","maxFiles","maxNumberOfFilesForFileupload","message","toaster","danger","push","relativePath","isFile","formData","parent_dir","relative_path","slice","lastIndexOf","setUploadFileList","sharedLinkGetFileUploadUrl","upload_link","resumableUpload","errMessage","isUploadLinkLoaded","upload","getFileUploadedBytes","uploadedBytes","blockSize","parseInt","resumableUploadFileBlockSize","offset","floor","markChunksCompleted","registerGlobalVariable","getBitrate","item","uniqueIdentifier","lastSize","time","loaded","now","Date","getTime","forEach","timestamp","timeDiff","bitrateInterval","currentTime","JSON","parse","dirent","id","type","mtime","errorMessage","notifiedFolders","setHeaders","chunkSize","getOpt","fileSize","startByte","endByte","min","encodeURI","setQuery","generateUniqueIdentifier","webkitRelativePath","MD5","stopPropagation","onFileUpload","uploadInput","current","removeAttribute","click","onFolderUpload","setAttribute","uploadingItem","filter","cancel","retryUploadFile","bootstrap","firedRetry","resumableObj","uploadFile","isUploadRemindDialogShow","cancelFileUpload","pop","currentResumableFile","createRef","Resumablejs","query","fileType","filetypes","undefined","maxFileSize","testMethod","testChunks","headers","withCredentials","simultaneousUploads","fileParameterName","forceChunkSize","maxChunkRetries","minFileSize","assignBrowse","enableDropOnDocument","ref","SaveSharedDirDialog","onSaveSharedFile","handleSaveSharedDir","repo","repo_id","selectedPath","onDirentItemClick","onRepoItemClick","Modal","ModalHeader","toggleCancel","ModalBody","isShowFile","mode","Alert","color","ModalFooter","Button","disabled","moment","locale","app","config","lang","loginUser","pageOptions","shared","dirName","dirPath","sharedBy","thumbnailSize","trafficOverLimit","canDownload","noQuota","canUpload","enableVideoThumbnail","showDownloadIcon","SharedDirView","sortItems","sortBy","sortOrder","items","sortDirentsInSharedDir","getThumbnails","is_dir","imageCheck","file_name","videoCheck","encoded_thumbnail_src","len","_this","getThumbnail","i","curItem","getShareLinkThumbnail","file_path","renderPath","Fragment","encodeURIComponent","zipDownloadFolder","folderPath","useGoFileserver","isZipDialogOpen","zipFolderPath","zipDownloadSelectedItems","isSelected","folder_name","selectedItems","saveSelectedItems","isSaveSharedDirDialogShow","itemsForSave","saveAllItems","toggleSaveSharedDirCancel","destRepoID","dstPath","saveSharedDir","isCopyMoveProgressDialogShow","asyncCopyMoveTaskId","task_id","asyncOperatedFilesLength","getAsyncCopyMoveProgress","onProgressDialogToggle","asyncOperationProgress","taskId","cancelCopyMoveOperation","closeZipDialog","prepareImageItem","isGIF","substr","toLowerCase","fileURL","siteRoot","thumbnailSizeForOriginal","encodePath","showImagePopup","imageItems","isImagePopupOpen","imageIndex","indexOf","closeImagePopup","moveToPrevImage","imageItemsLength","prevState","moveToNextImage","toggleAllSelected","isAllItemsSelected","toggleItemSelected","targetItem","some","onUploadFile","direntObject","newItem","joinPath","last_modified","format","folderItems","Array","from","splice","shareLinksUploadDone","getShareLinkRepoTags","usedRepoTags","repo_tags","usedRepoTag","RepoTag","fileCount","isRepoInfoBarShow","duration","listSharedDir","a","queryAsyncOperationProgress","successful","success","done","isDesktop","modeBaseClass","src","mediaUrl","logoPath","logoHeight","logoWidth","siteTitle","alt","currentPath","shareLinkToken","enableFileDownload","sharedToken","parentDir","sortByName","sortByTime","sortBySize","tbody","sortIcon","checked","onChange","Item","toggleOpMenu","isOpMenuOpen","handleMouseOver","isIconShown","handleMouseOut","folder_path","handleFileClick","toolTipID","tagTitle","file_tags","tag_name","join","onMouseOver","onMouseOut","onFocus","getFolderIconUrl","fromNow","Dropdown","DropdownToggle","tag","DropdownItem","thumbnailURL","getFileIconUrl","fileTag","zIndex","backgroundColor","tag_color","file_tag_id","UncontrolledTooltip","placement","bytesToSize","GridItem","folderURL","ReactDom","render","document","getElementById","ImageDialog","imageTitle","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","imagePadding","imageLoadErrorMessage","prevLabel","nextLabel","closeLabel","zoomInLabel","zoomOutLabel","ListTaggedFilesDialog","onFileTagChanged","TaggedFile","parent_path","filename","direntPath","onDeleteTaggedFile","taggedFile","fileTagID","deleteFileTag","getTaggedFiles","updateUsedRepoTags","file_deleted","currentTag","getShareLinkTaggedFiles","listTaggedFiles","taggedFileList","tagged_files","maxWidth","onClose","onMouseEnter","active","onMouseLeave","deleteFile","rel","unix","Draft","created","created_at","createdStr","ownerNickname","owner_nickname","originRepoID","origin_repo_id","draftFilePath","draft_file_path","ListRepoDraftsDialog","onDeleteDraftItem","draft","editorUtilities","deleteDraft","drafts","listRepoDrafts","draftItem","DraftItem","getFileName","ReadmeDialog","readmeContent","getFileDownloadLink","filePath","getFileContent","markdownContent","showTOC","scriptSource","RepoInfoBar","onListTaggedFiles","isListTaggedFileShow","onCloseDialog","toggleDrafts","showRepoDrafts","toggleReadme","showReadmeDialog","readmeMarkdown","draftCounts","CopyMoveDirentProgressDialog","progressStyle","lineHeight","textAlign","minHeight"],"mappings":"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","file":"static/js/sharedDirView.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { gettext, fileServerRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport Loading from '../loading';\n\nconst propTypes = {\n  token: PropTypes.string,\n  path: PropTypes.string.isRequired,\n  repoID: PropTypes.string,\n  target: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array\n  ]),\n  toggleDialog: PropTypes.func.isRequired\n};\n\nlet interval;\n\nclass ZipDownloadDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorMsg: '',\n      zipProgress: null\n    };\n  }\n\n  componentDidMount() {\n    const { token, path, repoID, target } = this.props;\n    let getZipTask;\n    if (token) {\n      getZipTask = target.length ?\n        seafileAPI.getShareLinkDirentsZipTask(token, path, target) :\n        seafileAPI.getShareLinkZipTask(token, path);\n    } else {\n      getZipTask = seafileAPI.zipDownload(repoID, path, target);\n    }\n    getZipTask.then((res) => {\n      const zipToken = res.data['zip_token'];\n      this.setState({\n        isLoading: false,\n        errorMsg: '',\n        zipToken: zipToken\n      });\n      this.queryZipProgress();\n      interval = setInterval(this.queryZipProgress, 1000);\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        isLoading: false,\n        errorMsg: errorMsg\n      });\n    });\n  }\n\n  queryZipProgress = () => {\n    const zipToken = this.state.zipToken;\n    seafileAPI.queryZipProgress(zipToken).then((res) => {\n      const data = res.data;\n      if (data.failed == 1) {\n        clearInterval(interval);\n        this.setState({\n          isLoading: false,\n          errorMsg: data.failed_reason\n        });\n      } else {\n        this.setState({\n          zipProgress: data.total == 0 ? '100%' : (data.zipped/data.total*100).toFixed(2) + '%'\n        });\n        if (data['total'] == data['zipped']) {\n          clearInterval(interval);\n          this.props.toggleDialog();\n          location.href = `${fileServerRoot}zip/${zipToken}`;\n        }\n      }\n    }).catch((error) => {\n      clearInterval(interval);\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        isLoading: false,\n        errorMsg: errorMsg\n      });\n    });\n  }\n\n  cancelZipTask = () => {\n    const zipToken = this.state.zipToken;\n    seafileAPI.cancelZipTask(zipToken).then((res) => {\n    // do nothing\n    }).catch((error) => {\n    // do nothing\n    });\n  }\n\n  toggleDialog = () => {\n    const zipProgress = this.state.zipProgress;\n    if (zipProgress && zipProgress != '100%') {\n      clearInterval(interval);\n      this.cancelZipTask();\n    }\n    this.props.toggleDialog();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true} toggle={this.toggleDialog}>\n        <ModalHeader toggle={this.toggleDialog}>{gettext('Download')}</ModalHeader>\n        <ModalBody>\n          <Content data={this.state} />\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nclass Content extends React.Component {\n\n  render() {\n    const {isLoading, errorMsg, zipProgress} = this.props.data;\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <p className=\"error mt-4 text-center\">{errorMsg}</p>;\n    }\n\n    return <p className=\"mt-4 text-center\">{`${gettext('Packaging...')} ${zipProgress}`}</p>;\n  }\n}\n\nZipDownloadDialog.propTypes = propTypes;\n\nexport default ZipDownloadDialog;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\n\nconst propTypes = {\n  resumableFile: PropTypes.object.isRequired,\n  onUploadCancel: PropTypes.func.isRequired,\n  onUploadRetry: PropTypes.func.isRequired,\n};\n\nconst UPLOAD_UPLOADING = 'uploading';\nconst UPLOAD_ERROR = 'error';\nconst UPLOAD_ISSAVING = 'isSaving';\nconst UPLOAD_UPLOADED = 'uploaded';\n\nclass UploadListItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      uploadState: UPLOAD_UPLOADING\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let { resumableFile } = nextProps;\n    let uploadState = UPLOAD_UPLOADING;\n\n    if (resumableFile.error) {\n      uploadState = UPLOAD_ERROR;\n    } else {\n      if (resumableFile.remainingTime === 0 && !resumableFile.isSaved) {\n        uploadState = UPLOAD_ISSAVING;\n      }\n\n      if (resumableFile.isSaved) {\n        uploadState = UPLOAD_UPLOADED;\n      }\n    }\n\n    this.setState({uploadState: uploadState});\n  }\n\n  onUploadCancel = (e) => {\n    e.preventDefault();\n    this.props.onUploadCancel(this.props.resumableFile);\n  }\n\n  onUploadRetry = (e) => {\n    e.preventDefault();\n    this.props.onUploadRetry(this.props.resumableFile);\n  }\n\n  formatFileSize = (size) => {\n    if (typeof size !== 'number') {\n      return '';\n    }\n    if (size >= 1000 * 1000 * 1000) {\n      return (size / (1000 * 1000 * 1000)).toFixed(1) + ' G';\n    }\n    if (size >= 1000 * 1000) {\n      return (size / (1000 * 1000)).toFixed(1) + ' M';\n    }\n    if (size >= 1000) {\n      return (size / 1000).toFixed(1) + ' K';\n    }\n    return size.toFixed(1) + ' B';\n  }\n\n  render() {\n    let { resumableFile } = this.props;\n    let progress = Math.round(resumableFile.progress() * 100);\n    let error = resumableFile.error;\n\n    const fileName = resumableFile.newFileName;\n    const size = this.formatFileSize(resumableFile.size);\n\n    return (\n      <tr className=\"file-upload-item\">\n        <td className=\"upload-name\">\n          <div className=\"ellipsis\" title={fileName}>{fileName}</div>\n        </td>\n        <td className=\"ellipsis\">\n          <span className=\"file-size\" title={size}>{size}</span>\n        </td>\n        <td className=\"upload-progress ellipsis\">\n          {(this.state.uploadState === UPLOAD_UPLOADING || this.state.uploadState === UPLOAD_ISSAVING) &&\n            <Fragment>\n              {resumableFile.size >= (100 * 1000 * 1000) &&\n                <Fragment>\n                  {resumableFile.isUploading() && (\n                    <div className=\"progress-container\">\n                      <div className=\"progress\">\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${progress}%`}} aria-valuenow={progress} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                      </div>\n                      {(resumableFile.remainingTime === -1) && <div className=\"progress-text\">{gettext('Preparing to upload...')}</div>}\n                      {(resumableFile.remainingTime > 0) && <div className=\"progress-text\">{gettext('Remaining')}{' '}{Utils.formatTime(resumableFile.remainingTime)}</div>}\n                      {(resumableFile.remainingTime === 0) && <div className=\"progress-text\">{gettext('Indexing...')}</div>}\n                    </div>\n                  )}\n                  {!resumableFile.isUploading() && (\n                    <div className=\"progress-container d-flex align-items-center\">\n                      <div className=\"progress\">\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${progress}%`}} aria-valuenow={progress} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                      </div>\n                    </div>\n                  )}\n                </Fragment>\n              }\n              {(resumableFile.size < (100 * 1000 * 1000)) &&\n                <div className=\"progress-container d-flex align-items-center\">\n                  <div className=\"progress\">\n                    <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${progress}%`}} aria-valuenow={progress} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                  </div>\n                </div>\n              }\n            </Fragment>\n          }\n          {this.state.uploadState === UPLOAD_ERROR && (\n            <div className=\"message err-message ml-0\" dangerouslySetInnerHTML={{__html: error}}></div>\n          )}\n        </td>\n        <td className=\"upload-operation ellipsis\">\n          <Fragment>\n            {this.state.uploadState === UPLOAD_UPLOADING && (\n              <a href=\"#\" onClick={this.onUploadCancel}>{gettext('Cancel')}</a>\n            )}\n            {this.state.uploadState === UPLOAD_ERROR && (\n              <a href=\"#\" onClick={this.onUploadRetry}>{gettext('Retry')}</a>\n            )}\n            {this.state.uploadState === UPLOAD_ISSAVING && (\n              <span className=\"saving\">{gettext('Saving...')}</span>\n            )}\n            {this.state.uploadState === UPLOAD_UPLOADED && (\n              <span className=\"uploaded\">{gettext('Uploaded')}</span>\n            )}\n          </Fragment>\n        </td>\n      </tr>\n    );\n  }\n}\n\nUploadListItem.propTypes = propTypes;\n\nexport default UploadListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext, maxUploadFileSize } from '../../utils/constants';\n\nconst propTypes = {\n  file: PropTypes.object,\n};\n\nclass ForbidUploadListItem extends React.Component {\n\n  render() {\n    let { file } = this.props;\n    let msg = gettext('Please upload files less than {placeholder}M').replace('{placeholder}', maxUploadFileSize);\n    return (\n      <tr className=\"file-upload-item\">\n        <td className=\"upload-name\">\n          <div className=\"ellipsis\" title={file.name}>{file.name}</div>\n        </td>\n\n        <td colSpan={3} className=\"error\">{msg}</td>\n      </tr>\n    );\n  }\n}\n\nForbidUploadListItem.propTypes = propTypes;\n\nexport default ForbidUploadListItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport UploadListItem from './upload-list-item';\nimport ForbidUploadListItem from './forbid-upload-list-item';\n\nconst propTypes = {\n  uploadBitrate: PropTypes.number.isRequired,\n  totalProgress: PropTypes.number.isRequired,\n  retryFileList: PropTypes.array.isRequired,\n  uploadFileList: PropTypes.array.isRequired,\n  forbidUploadFileList: PropTypes.array.isRequired,\n  onCloseUploadDialog: PropTypes.func.isRequired,\n  onCancelAllUploading: PropTypes.func.isRequired,\n  onUploadCancel: PropTypes.func.isRequired,\n  onUploadRetry: PropTypes.func.isRequired,\n  onUploadRetryAll: PropTypes.func.isRequired,\n  allFilesUploaded: PropTypes.bool.isRequired,\n};\n\nclass UploadProgressDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMinimized: false\n    };\n  }\n\n  onCancelAllUploading = () => {\n    this.props.onCancelAllUploading();\n  }\n\n  onMinimizeUpload = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    this.setState({isMinimized: !this.state.isMinimized});\n  }\n\n  onCloseUpload = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    this.props.onCloseUploadDialog();\n  }\n\n  render() {\n\n    let uploadBitrate = Utils.formatBitRate(this.props.uploadBitrate);\n    let uploadedMessage = gettext('File Upload');\n    let uploadingMessage = gettext('File Uploading...') + ' ' + this.props.totalProgress + '% (' + uploadBitrate + ')';\n\n    let uploadingOptions = (<span className=\"sf2-icon-minus\" onClick={this.onMinimizeUpload}></span>);\n\n    let uploadedOptions = (\n      <Fragment>\n        <span className=\"sf2-icon-minus\" onClick={this.onMinimizeUpload}></span>\n        <span className=\"sf2-icon-x1\" onClick={this.onCloseUpload}></span>\n      </Fragment>\n    );\n\n    let { totalProgress, allFilesUploaded, retryFileList } = this.props;\n\n    return (\n      <div className=\"uploader-list-view mw-100\" style={{height: this.state.isMinimized ? '2.25rem' : '20rem'}}>\n        <div className=\"uploader-list-header\">\n          <div className=\"title\">\n            {totalProgress === 100 ? uploadedMessage : uploadingMessage}\n          </div>\n          <div className=\"uploader-options\">\n            {totalProgress === 100 ||  allFilesUploaded ? uploadedOptions : uploadingOptions}\n          </div>\n        </div>\n        <div className=\"uploader-list-content\">\n          <div className=\"text-right mt-2\">\n            {retryFileList.length > 0 ?\n              <span className=\"cursor-pointer\" onClick={this.props.onUploadRetryAll}>{gettext('Retry All')}</span>\n              :\n              <span className=\"cursor-pointer disabled-link\">{gettext('Retry All')}</span>\n            }\n            {!allFilesUploaded ?\n              <span className=\"cursor-pointer ml-3\" onClick={this.onCancelAllUploading}>{gettext('Cancel All')}</span>\n              :\n              <span className=\"cursor-pointer ml-3 disabled-link\" >{gettext('Cancel All')}</span>\n            }\n          </div>\n          <table className=\"table-thead-hidden\">\n            <thead>\n              <tr>\n                <th width=\"30%\">{gettext('name')}</th>\n                <th width=\"20%\">{gettext('size')}</th>\n                <th width=\"30%\">{gettext('progress')}</th>\n                <th width=\"20%\">{gettext('state')}</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                this.props.forbidUploadFileList.map((file, index) => {\n                  return (<ForbidUploadListItem key={index} file={file} />);\n                })\n              }\n              {\n                this.props.uploadFileList.map((resumableFile, index) => {\n                  return (\n                    <UploadListItem\n                      key={index}\n                      resumableFile={resumableFile}\n                      onUploadCancel={this.props.onUploadCancel}\n                      onUploadRetry={this.props.onUploadRetry}\n                    />\n                  );\n                })\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nUploadProgressDialog.propTypes = propTypes;\n\nexport default UploadProgressDialog;\n","// the parent folder of this file is copied from components/file-uploader\n// this file is modified according to the requirements of 'file upload' in 'shared dir link'\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Resumablejs from '@seafile/resumablejs';\nimport MD5 from 'MD5';\nimport { resumableUploadFileBlockSize, maxUploadFileSize, maxNumberOfFilesForFileupload } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport { gettext } from '../../utils/constants';\nimport UploadProgressDialog from './upload-progress-dialog';\nimport toaster from '../toast';\nimport '../../css/file-uploader.css';\n\nconst propTypes = {\n  token: PropTypes.string.isRequired,\n  repoID: PropTypes.string.isRequired,\n  //direntList: PropTypes.array.isRequired,\n  filetypes: PropTypes.array,\n  chunkSize: PropTypes.number,\n  withCredentials: PropTypes.bool,\n  testMethod: PropTypes.string,\n  testChunks: PropTypes.number,\n  simultaneousUploads: PropTypes.number,\n  fileParameterName: PropTypes.string,\n  minFileSizeErrorCallback: PropTypes.func,\n  fileTypeErrorCallback: PropTypes.func,\n  dragAndDrop: PropTypes.bool.isRequired,\n  path: PropTypes.string.isRequired,\n  relativePath: PropTypes.string.isRequired,\n  onFileUploadSuccess: PropTypes.func.isRequired\n};\n\nclass FileUploader extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      retryFileList: [],\n      uploadFileList: [],\n      forbidUploadFileList: [],\n      totalProgress: 0,\n      isUploadProgressDialogShow: false,\n      isUploadRemindDialogShow: false,\n      currentResumableFile: null,\n      uploadBitrate: 0,\n      allFilesUploaded: false,\n    };\n\n    this.uploadInput = React.createRef();\n\n    this.notifiedFolders = [];\n\n    this.timestamp = null;\n    this.loaded = 0;\n    this.bitrateInterval = 500; // Interval in milliseconds to calculate the bitrate\n    window.onbeforeunload = this.onbeforeunload;\n    this.isUploadLinkLoaded = false;\n  }\n\n  componentDidMount() {\n    this.resumable = new Resumablejs({\n      target: '',\n      query: this.setQuery || {},\n      fileType: this.props.filetypes,\n      maxFiles: maxNumberOfFilesForFileupload || undefined,\n      maxFileSize: maxUploadFileSize * 1000 * 1000 || undefined,\n      testMethod: this.props.testMethod || 'post',\n      testChunks: this.props.testChunks || false,\n      headers: this.setHeaders || {},\n      withCredentials: this.props.withCredentials || false,\n      chunkSize: parseInt(resumableUploadFileBlockSize) * 1024 * 1024 || 1 * 1024 * 1024,\n      simultaneousUploads: this.props.simultaneousUploads || 1,\n      fileParameterName: this.props.fileParameterName,\n      generateUniqueIdentifier: this.generateUniqueIdentifier,\n      forceChunkSize: true,\n      maxChunkRetries: 3,\n      minFileSize: 0,\n    });\n\n    this.resumable.assignBrowse(this.uploadInput.current, true);\n\n    //Enable or Disable DragAnd Drop\n    if (this.props.dragAndDrop === true) {\n      this.resumable.enableDropOnDocument();\n    }\n\n    this.bindCallbackHandler();\n    this.bindEventHandler();\n  }\n\n  componentWillUnmount = () => {\n    window.onbeforeunload = null;\n    if (this.props.dragAndDrop === true) {\n      this.resumable.disableDropOnDocument();\n    }\n  }\n\n  onbeforeunload = () => {\n    if (window.uploader &&\n        window.uploader.isUploadProgressDialogShow &&\n        window.uploader.totalProgress !== 100) {\n      return '';\n    }\n  }\n\n  bindCallbackHandler = () => {\n    let { minFileSizeErrorCallback, fileTypeErrorCallback } = this.props;\n\n    if (this.maxFilesErrorCallback) {\n      this.resumable.opts.maxFilesErrorCallback = this.maxFilesErrorCallback;\n    }\n\n    if (minFileSizeErrorCallback) {\n      this.resumable.opts.minFileSizeErrorCallback = this.props.minFileSizeErrorCallback;\n    }\n\n    if (this.maxFileSizeErrorCallback) {\n      this.resumable.opts.maxFileSizeErrorCallback = this.maxFileSizeErrorCallback;\n    }\n\n    if (fileTypeErrorCallback) {\n      this.resumable.opts.fileTypeErrorCallback = this.props.fileTypeErrorCallback;\n    }\n\n  }\n\n  bindEventHandler = () => {\n    this.resumable.on('chunkingComplete', this.onChunkingComplete.bind(this));\n    this.resumable.on('fileAdded', this.onFileAdded.bind(this));\n    this.resumable.on('filesAddedComplete', this.filesAddedComplete.bind(this));\n    this.resumable.on('fileProgress', this.onFileProgress.bind(this));\n    this.resumable.on('fileSuccess', this.onFileUploadSuccess.bind(this));\n    this.resumable.on('progress', this.onProgress.bind(this));\n    this.resumable.on('complete', this.onComplete.bind(this));\n    this.resumable.on('pause', this.onPause.bind(this));\n    this.resumable.on('fileRetry', this.onFileRetry.bind(this));\n    this.resumable.on('fileError', this.onFileError.bind(this));\n    this.resumable.on('error', this.onError.bind(this));\n    this.resumable.on('beforeCancel', this.onBeforeCancel.bind(this));\n    this.resumable.on('cancel', this.onCancel.bind(this));\n    this.resumable.on('dragstart', this.onDragStart.bind(this));\n  }\n\n  maxFilesErrorCallback = (files, errorCount) => {\n    let maxFiles = maxNumberOfFilesForFileupload;\n    let message = gettext('Please upload no more than {maxFiles} files at a time.');\n    message = message.replace('{maxFiles}', maxFiles);\n    toaster.danger(message);\n  }\n\n  maxFileSizeErrorCallback = (file) => {\n    let { forbidUploadFileList } = this.state;\n    forbidUploadFileList.push(file);\n    this.setState({forbidUploadFileList: forbidUploadFileList});\n  }\n\n  onChunkingComplete = (resumableFile) => {\n\n    let allFilesUploaded = this.state.allFilesUploaded;\n    if (allFilesUploaded === true) {\n      this.setState({allFilesUploaded: false});\n    }\n\n    //get parent_dir relative_path\n    let path = this.props.path === '/' ? '/' : this.props.path + '/';\n    let fileName = resumableFile.fileName;\n    let relativePath = resumableFile.relativePath;\n    let isFile = fileName === relativePath;\n\n    //update formdata\n    resumableFile.formData = {};\n    if (isFile) { // upload file\n      resumableFile.formData  = {\n        parent_dir: path,\n      };\n    } else { // upload folder\n      let relative_path = relativePath.slice(0, relativePath.lastIndexOf('/') + 1);\n      resumableFile.formData  = {\n        parent_dir: path,\n        relative_path: relative_path\n      };\n    }\n  }\n\n  onFileAdded = (resumableFile, files) => {\n    let isFile = resumableFile.fileName === resumableFile.relativePath;\n    // uploading is file and only upload one file\n    if (isFile && files.length === 1) {\n      let hasRepetition = false;\n      /*\n      let direntList = this.props.direntList;\n      for (let i = 0; i < direntList.length; i++) {\n        if (direntList[i].type === 'file' && direntList[i].name === resumableFile.fileName) {\n          hasRepetition = true;\n          break;\n        }\n      }\n      */\n      if (hasRepetition) {\n        this.setState({\n          isUploadRemindDialogShow: true,\n          currentResumableFile: resumableFile,\n        });\n      } else {\n        this.setUploadFileList(this.resumable.files);\n        let { token, relativePath } = this.props;\n        seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n          this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n          this.resumableUpload(resumableFile);\n        }).catch(error => {\n          let errMessage = Utils.getErrorMsg(error);\n          toaster.danger(errMessage);\n        });\n      }\n    } else {\n      this.setUploadFileList(this.resumable.files);\n      if (!this.isUploadLinkLoaded) {\n        this.isUploadLinkLoaded = true;\n        let { token, relativePath } = this.props;\n        seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n          this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n          this.resumable.upload();\n        }).catch(error => {\n          let errMessage = Utils.getErrorMsg(error);\n          toaster.danger(errMessage);\n        });\n      }\n    }\n  }\n\n  resumableUpload = (resumableFile) => {\n    let { repoID, path } = this.props;\n    seafileAPI.getFileUploadedBytes(repoID, path, resumableFile.fileName).then(res => {\n      let uploadedBytes = res.data.uploadedBytes;\n      let blockSize = parseInt(resumableUploadFileBlockSize) * 1024 * 1024 || 1024 * 1024;\n      let offset = Math.floor(uploadedBytes / blockSize);\n      resumableFile.markChunksCompleted(offset);\n      this.resumable.upload();\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  filesAddedComplete = (resumable, files) => {\n    let { forbidUploadFileList } = this.state;\n    if (forbidUploadFileList.length > 0 && files.length === 0) {\n      this.setState({\n        isUploadProgressDialogShow: true,\n        totalProgress: 100\n      });\n    }\n  }\n\n  setUploadFileList = () => {\n    let uploadFileList = this.resumable.files;\n    this.setState({\n      uploadFileList: uploadFileList,\n      isUploadProgressDialogShow: true,\n    });\n    Utils.registerGlobalVariable('uploader', 'isUploadProgressDialogShow', true);\n  }\n\n  onFileProgress = (resumableFile) => {\n    let uploadBitrate = this.getBitrate();\n    let uploadFileList = this.state.uploadFileList.map(item => {\n      if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n        if (uploadBitrate) {\n          let lastSize = (item.size - (item.size * item.progress())) * 8;\n          let time = Math.floor(lastSize / uploadBitrate);\n          item.remainingTime = time;\n        }\n      }\n      return item;\n    });\n\n    this.setState({\n      uploadBitrate: uploadBitrate,\n      uploadFileList: uploadFileList\n    });\n  }\n\n  getBitrate = () => {\n    let loaded = 0;\n    let uploadBitrate = 0;\n    let now = new Date().getTime();\n\n    this.resumable.files.forEach(file => {\n      loaded += file.progress() * file.size;\n    });\n\n    if (this.timestamp) {\n      let timeDiff = (now - this.timestamp);\n      if (timeDiff < this.bitrateInterval) {\n        return this.state.uploadBitrate;\n      }\n\n      // 1. Cancel will produce loaded greater than this.loaded\n      // 2. reset can make this.loaded to be 0\n      if (loaded < this.loaded || this.loaded === 0) {\n        this.loaded = loaded; //\n      }\n\n      uploadBitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\n    }\n\n    this.timestamp = now;\n    this.loaded = loaded;\n\n    return uploadBitrate;\n  }\n\n  onProgress = () => {\n    let progress = Math.round(this.resumable.progress() * 100);\n    this.setState({totalProgress: progress});\n    Utils.registerGlobalVariable('uploader', 'totalProgress', progress);\n  }\n\n  onFileUploadSuccess = (resumableFile, message) => {\n    let formData = resumableFile.formData;\n    let currentTime = new Date().getTime()/1000;\n    message = formData.replace ? message : JSON.parse(message)[0];\n    if (formData.relative_path) { // upload folder\n      // 'upload folder' is not supported\n      /*\n      let relative_path = formData.relative_path;\n      let dir_name = relative_path.slice(0, relative_path.indexOf('/'));\n      let dirent = {\n        id: message.id,\n        name: dir_name,\n        type: 'dir',\n        mtime: currentTime,\n      };\n\n      // update folders cache\n      let isExist = this.notifiedFolders.some(item => {return item.name === dirent.name;});\n      if (!isExist) {\n        this.notifiedFolders.push(dirent);\n        this.props.onFileUploadSuccess(dirent);\n      }\n\n      // update uploadFileList\n      let uploadFileList = this.state.uploadFileList.map(item => {\n        if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n          item.newFileName = relative_path + message.name;\n          item.isSaved = true;\n        }\n        return item;\n      });\n      this.setState({uploadFileList: uploadFileList});\n\n      return;\n      */\n    }\n\n    // replacing file is not allowed in shared link with 'can_upload' permission\n    /*\n    if (formData.replace) { // upload file -- replace exist file\n      let fileName = resumableFile.fileName;\n      let dirent = {\n        id: message,\n        name: fileName,\n        type: 'file',\n        mtime: currentTime\n      };\n      this.props.onFileUploadSuccess(dirent); // this contance: just one file\n\n      let uploadFileList = this.state.uploadFileList.map(item => {\n        if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n          item.newFileName = fileName;\n          item.isSaved = true;\n        }\n        return item;\n      });\n      this.setState({uploadFileList: uploadFileList});\n\n      return;\n    }\n    */\n\n    // upload file -- add files\n    let dirent = {\n      id: message.id,\n      type: 'file',\n      name: message.name,\n      size: message.size,\n      mtime: currentTime,\n    };\n    this.props.onFileUploadSuccess(dirent); // this contance:  no repetition file\n\n    let uploadFileList = this.state.uploadFileList.map(item => {\n      if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n        item.newFileName = message.name;\n        item.isSaved = true;\n      }\n      return item;\n    });\n    this.setState({uploadFileList: uploadFileList});\n  }\n\n  onFileError = (resumableFile, message) => {\n    let error = '';\n    if (!message) {\n      error = gettext('Network error');\n    } else {\n      // eg: '{\"error\": \"Internal error\" \\n }'\n      let errorMessage = message.replace(/\\n/g, '');\n      errorMessage  = JSON.parse(errorMessage);\n      error = errorMessage.error;\n      if (error === 'File locked by others.') {\n        error = gettext('File is locked by others.');\n      }\n      if (error === 'Internal error.') {\n        error = gettext('Internal Server Error');\n      }\n    }\n\n    let uploadFileList = this.state.uploadFileList.map(item => {\n      if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n        this.state.retryFileList.push(item);\n        item.error = error;\n      }\n      return item;\n    });\n\n    this.loaded = 0;  // reset loaded data;\n    this.setState({\n      retryFileList: this.state.retryFileList,\n      uploadFileList: uploadFileList\n    });\n\n  }\n\n  onComplete = () => {\n    this.notifiedFolders = [];\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n    this.setState({allFilesUploaded: true});\n  }\n\n  onPause = () => {\n\n  }\n\n  onError = (message) => {\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n    // After the error, the user can switch windows\n    Utils.registerGlobalVariable('uploader', 'totalProgress', 100);\n  }\n\n  onFileRetry = () => {\n    // todo, cancel upload file, uploded again;\n  }\n\n  onBeforeCancel = () => {\n    // todo, giving a pop message ?\n  }\n\n  onCancel = () => {\n\n  }\n\n  setHeaders = (resumableFile, resumable) => {\n    let offset = resumable.offset;\n    let chunkSize = resumable.getOpt('chunkSize');\n    let fileSize = resumableFile.size === 0 ? 1 : resumableFile.size;\n    let startByte = offset !== 0 ? offset * chunkSize : 0;\n    let endByte = Math.min(fileSize, (offset + 1) * chunkSize) - 1;\n\n    if (fileSize - resumable.endByte < chunkSize && !resumable.getOpt('forceChunkSize')) {\n      endByte = fileSize;\n    }\n\n    let headers = {\n      'Accept': 'application/json; text/javascript, */*; q=0.01',\n      'Content-Disposition': 'attachment; filename=\"' + encodeURI(resumableFile.fileName) + '\"',\n      'Content-Range': 'bytes ' + startByte + '-' + endByte + '/' + fileSize,\n    };\n\n    return headers;\n  }\n\n  setQuery = (resumableFile) => {\n    let formData = resumableFile.formData;\n    return formData;\n  }\n\n  generateUniqueIdentifier = (file) => {\n    let relativePath = file.webkitRelativePath||file.relativePath||file.fileName||file.name;\n    return MD5(relativePath + new Date()) + relativePath;\n  }\n\n  onClick = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    e.stopPropagation();\n  }\n\n  onFileUpload = () => {\n    this.uploadInput.current.removeAttribute('webkitdirectory');\n\n    this.uploadInput.current.click();\n  }\n\n  onFolderUpload = () => {\n    this.uploadInput.current.setAttribute('webkitdirectory', 'webkitdirectory');\n    this.uploadInput.current.click();\n  }\n\n  onDragStart = () => {\n    this.uploadInput.current.setAttribute('webkitdirectory', 'webkitdirectory');\n  }\n\n  onCloseUploadDialog = () => {\n    this.loaded = 0;\n    this.resumable.files = [];\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n    this.setState({isUploadProgressDialogShow: false, uploadFileList: [], forbidUploadFileList: []});\n    Utils.registerGlobalVariable('uploader', 'isUploadProgressDialogShow', false);\n  }\n\n  onUploadCancel = (uploadingItem) => {\n\n    let uploadFileList = this.state.uploadFileList.filter(item => {\n      if (item.uniqueIdentifier === uploadingItem.uniqueIdentifier) {\n        item.cancel(); // execute cancel function will delete the file at the same time\n        return false;\n      }\n      return true;\n    });\n\n    if (!this.resumable.isUploading()) {\n      this.setState({\n        totalProgress: '100',\n        allFilesUploaded: true,\n      });\n      this.loaded = 0;\n    }\n\n    this.setState({uploadFileList: uploadFileList});\n  }\n\n  onCancelAllUploading = () => {\n    let uploadFileList = this.state.uploadFileList.filter(item => {\n      if (Math.round(item.progress() !== 1)) {\n        item.cancel();\n        return false;\n      }\n      return true;\n    });\n\n    this.loaded = 0;\n\n    this.setState({\n      allFilesUploaded: true,\n      totalProgress: '100',\n      uploadFileList: uploadFileList\n    });\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n  }\n\n  onUploadRetry = (resumableFile) => {\n\n    let { token, relativePath } = this.props;\n    seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n      this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n\n      let retryFileList = this.state.retryFileList.filter(item => {\n        return item.uniqueIdentifier !== resumableFile.uniqueIdentifier;\n      });\n      let uploadFileList = this.state.uploadFileList.map(item => {\n        if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n          item.error = null;\n          this.retryUploadFile(item);\n        }\n        return item;\n      });\n\n      this.setState({\n        retryFileList: retryFileList,\n        uploadFileList: uploadFileList\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  onUploadRetryAll = () => {\n\n    let { token, relativePath } = this.props;\n    seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n      this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n      this.state.retryFileList.forEach(item => {\n        item.error = false;\n        this.retryUploadFile(item);\n      });\n\n      let uploadFileList = this.state.uploadFileList.slice(0);\n      this.setState({\n        retryFileList: [],\n        uploadFileList: uploadFileList\n      });\n\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  retryUploadFile = (resumableFile) => {\n    let { repoID, path } = this.props;\n    let fileName = resumableFile.fileName;\n    let isFile = resumableFile.fileName === resumableFile.relativePath;\n    if (!isFile) {\n      let relative_path = resumableFile.formData.relative_path;\n      let prefix = path === '/' ? (path + relative_path) : (path + '/' + relative_path);\n      fileName = prefix + fileName;\n    }\n\n    resumableFile.bootstrap();\n    var firedRetry = false;\n    resumableFile.resumableObj.on('chunkingComplete', () => {\n      if(!firedRetry) {\n        seafileAPI.getFileUploadedBytes(repoID, path, fileName).then(res => {\n          let uploadedBytes = res.data.uploadedBytes;\n          let blockSize = parseInt(resumableUploadFileBlockSize) * 1024 * 1024 || 1024 * 1024;\n          let offset = Math.floor(uploadedBytes / blockSize);\n          resumableFile.markChunksCompleted(offset);\n\n          resumableFile.resumableObj.upload();\n\n        }).catch(error => {\n          let errMessage = Utils.getErrorMsg(error);\n          toaster.danger(errMessage);\n        });\n      }\n      firedRetry = true;\n    });\n  }\n\n  uploadFile = () => {\n    let resumableFile = this.resumable.files[this.resumable.files.length - 1];\n\n    let { token, relativePath } = this.props;\n    seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n      this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n      this.setState({\n        isUploadRemindDialogShow: false,\n        isUploadProgressDialogShow: true,\n        uploadFileList: [...this.state.uploadFileList, resumableFile]\n      }, () => {\n        this.resumable.upload();\n      });\n      Utils.registerGlobalVariable('uploader', 'isUploadProgressDialogShow', true);\n\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  cancelFileUpload = () => {\n    this.resumable.files.pop(); //delete latest file；\n    this.setState({isUploadRemindDialogShow: false});\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"file-uploader-container\">\n          <div className=\"file-uploader\">\n            <input className=\"upload-input\" type=\"file\" ref={this.uploadInput} onClick={this.onClick}/>\n          </div>\n        </div>\n        {this.state.isUploadProgressDialogShow &&\n          <UploadProgressDialog\n            retryFileList={this.state.retryFileList}\n            uploadFileList={this.state.uploadFileList}\n            forbidUploadFileList={this.state.forbidUploadFileList}\n            totalProgress={this.state.totalProgress}\n            uploadBitrate={this.state.uploadBitrate}\n            allFilesUploaded={this.state.allFilesUploaded}\n            onCloseUploadDialog={this.onCloseUploadDialog}\n            onCancelAllUploading={this.onCancelAllUploading}\n            onUploadCancel={this.onUploadCancel}\n            onUploadRetry={this.onUploadRetry}\n            onUploadRetryAll={this.onUploadRetryAll}\n          />\n        }\n      </Fragment>\n    );\n  }\n}\n\nFileUploader.propTypes = propTypes;\n\nexport default FileUploader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Alert } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport FileChooser from '../file-chooser/file-chooser';\nimport { Utils } from '../../utils/utils';\n\nconst propTypes = {\n  sharedToken: PropTypes.string.isRequired,\n  parentDir: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  toggleCancel: PropTypes.func.isRequired,\n  handleSaveSharedDir: PropTypes.func.isRequired,\n};\n\nclass SaveSharedDirDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      repo: null,\n      selectedPath: '',\n      errMessage: '',\n    };\n  }\n\n  onSaveSharedFile = () => {\n    this.props.handleSaveSharedDir(this.state.repo.repo_id, this.state.selectedPath)\n  }\n\n  onDirentItemClick = (repo, selectedPath, dirent) => {\n    if (dirent.type === 'dir') {\n      this.setState({\n        repo: repo,\n        selectedPath: selectedPath,\n      });\n    }\n    else {\n      this.setState({\n        repo: null,\n        selectedPath: '',\n      });\n    }\n  }\n\n  onRepoItemClick = (repo) => {\n    this.setState({\n      repo: repo,\n      selectedPath: '/',\n    });\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true} className=\"sf-save-file\">\n        <ModalHeader toggle={this.props.toggleCancel}>{gettext('Save to:')}</ModalHeader>\n        <ModalBody>\n          <FileChooser\n            isShowFile={false}\n            onDirentItemClick={this.onDirentItemClick}\n            onRepoItemClick={this.onRepoItemClick}\n            mode=\"only_all_repos\"\n          />\n          {this.state.errMessage && <Alert color=\"danger\">{this.state.errMessage}</Alert>}\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggleCancel}>{gettext('Cancel')}</Button>\n          { this.state.selectedPath ?\n            <Button color=\"primary\" onClick={this.onSaveSharedFile}>{gettext('Submit')}</Button>\n            :\n            <Button color=\"primary\" disabled>{gettext('Submit')}</Button>\n          }\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nSaveSharedDirDialog.propTypes = propTypes;\n\nexport default SaveSharedDirDialog;\n","import React, { Fragment } from 'react';\nimport MD5 from 'MD5';\nimport ReactDom from 'react-dom';\nimport { Button, Dropdown, DropdownToggle, DropdownItem, UncontrolledTooltip } from 'reactstrap';\nimport moment from 'moment';\nimport Account from './components/common/account';\nimport { useGoFileserver, fileServerRoot, gettext, siteRoot, mediaUrl, logoPath, logoWidth, logoHeight, siteTitle, thumbnailSizeForOriginal } from './utils/constants';\nimport { Utils } from './utils/utils';\nimport { seafileAPI } from './utils/seafile-api';\nimport Loading from './components/loading';\nimport toaster from './components/toast';\nimport ModalPortal from './components/modal-portal';\nimport ZipDownloadDialog from './components/dialog/zip-download-dialog';\nimport ImageDialog from './components/dialog/image-dialog';\nimport FileUploader from './components/shared-link-file-uploader/file-uploader';\nimport SaveSharedDirDialog from './components/dialog/save-shared-dir-dialog';\nimport CopyMoveDirentProgressDialog from './components/dialog/copy-move-dirent-progress-dialog';\nimport RepoInfoBar from './components/repo-info-bar';\nimport RepoTag from './models/repo-tag';\n\nimport './css/shared-dir-view.css';\nimport './css/grid-view.css';\n\nmoment.locale(window.app.config.lang);\n\nlet loginUser = window.app.pageOptions.name;\nlet {\n  token, dirName, dirPath, sharedBy,\n  repoID, relativePath,\n  mode, thumbnailSize, zipped,\n  trafficOverLimit, canDownload,\n  noQuota, canUpload, enableVideoThumbnail\n} = window.shared.pageOptions;\n\nconst showDownloadIcon = !trafficOverLimit && canDownload;\n\nclass SharedDirView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorMsg: '',\n      items: [],\n\n      isAllItemsSelected: false,\n      selectedItems: [],\n\n      sortBy: 'name', // 'name' or 'time' or 'size'\n      sortOrder: 'asc', // 'asc' or 'desc'\n\n      isZipDialogOpen: false,\n      zipFolderPath: '',\n\n      usedRepoTags: [],\n      isRepoInfoBarShow: false,\n\n      isSaveSharedDirDialogShow: false,\n      itemsForSave: [],\n\n      asyncCopyMoveTaskId: '',\n      asyncOperationProgress: 0,\n      asyncOperatedFilesLength: 0,\n      isCopyMoveProgressDialogShow: false,\n\n      isImagePopupOpen: false,\n      imageItems: [],\n      imageIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    if (trafficOverLimit) {\n      toaster.danger(gettext('File download is disabled: the share link traffic of owner is used up.'), {\n        duration: 3\n      });\n    }\n\n    seafileAPI.listSharedDir(token, relativePath, thumbnailSize).then((res) => {\n      const items = res.data['dirent_list'].map(item => {\n        item.isSelected = false;\n        return item;\n      });\n      this.setState({\n        isLoading: false,\n        errorMsg: '',\n        items: Utils.sortDirentsInSharedDir(items, this.state.sortBy, this.state.sortOrder)\n      });\n      this.getThumbnails();\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        isLoading: false,\n        errorMsg: errorMsg\n      });\n    });\n\n    this.getShareLinkRepoTags();\n  }\n\n  sortItems = (sortBy, sortOrder) => {\n    this.setState({\n      sortBy: sortBy,\n      sortOrder: sortOrder,\n      items: Utils.sortDirentsInSharedDir(this.state.items, sortBy, sortOrder)\n    });\n  }\n\n  getThumbnails = () => {\n    let items = this.state.items.filter((item) => {\n      return !item.is_dir &&\n        (Utils.imageCheck(item.file_name) ||\n        (enableVideoThumbnail && Utils.videoCheck(item.file_name))) &&\n        !item.encoded_thumbnail_src;\n    });\n    if (items.length == 0) {\n      return ;\n    }\n\n    const len = items.length;\n    const _this = this;\n    let getThumbnail = function(i) {\n      const curItem = items[i];\n      seafileAPI.getShareLinkThumbnail(token, curItem.file_path, thumbnailSize).then((res) => {\n        curItem.encoded_thumbnail_src = res.data.encoded_thumbnail_src;\n      }).catch((error) => {\n        // do nothing\n      }).then(() => {\n        if (i < len - 1) {\n          getThumbnail(++i);\n        } else {\n          // when done, `setState()`\n          _this.setState({\n            items: _this.state.items\n          });\n        }\n      });\n    };\n    getThumbnail(0);\n  }\n\n  renderPath = () => {\n    return (\n      <React.Fragment>\n        {zipped.map((item, index) => {\n          if (index != zipped.length - 1) {\n            return (\n              <React.Fragment key={index}>\n                <a href={`?p=${encodeURIComponent(item.path)}&mode=${mode}`} className=\"mx-1 ellipsis\" title={item.name}>{item.name}</a>\n                <span> / </span>\n              </React.Fragment>\n            );\n          }\n        })\n        }\n        <span className=\"ml-1 ellipsis\" title={zipped[zipped.length - 1].name}>{zipped[zipped.length - 1].name}</span>\n      </React.Fragment>\n    );\n  }\n\n  zipDownloadFolder = (folderPath) => {\n    if (!useGoFileserver) {\n      this.setState({\n        isZipDialogOpen: true,\n        zipFolderPath: folderPath\n      });\n    }\n    else {\n      seafileAPI.getShareLinkZipTask(token, folderPath).then((res) => {\n        const zipToken = res.data['zip_token'];\n        location.href = `${fileServerRoot}zip/${zipToken}`;\n      }).catch((error) => {\n        let errorMsg = Utils.getErrorMsg(error);\n        this.setState({\n          isLoading: false,\n          errorMsg: errorMsg\n        });\n      });\n    }\n  }\n\n  zipDownloadSelectedItems = () => {\n    if (!useGoFileserver) {\n      this.setState({\n        isZipDialogOpen: true,\n        zipFolderPath: relativePath,\n        selectedItems: this.state.items.filter(item => item.isSelected)\n          .map(item => item.file_name || item.folder_name)\n      });\n    }\n    else {\n      let target = this.state.items.filter(item => item.isSelected).map(item => item.file_name || item.folder_name);\n      seafileAPI.getShareLinkDirentsZipTask(token, relativePath, target).then((res) => {\n        const zipToken = res.data['zip_token'];\n        location.href = `${fileServerRoot}zip/${zipToken}`;\n      }).catch((error) => {\n        let errorMsg = Utils.getErrorMsg(error);\n        this.setState({\n          isLoading: false,\n          errorMsg: errorMsg\n        });\n      });\n    }\n  }\n\n  async getAsyncCopyMoveProgress() {\n    let { asyncCopyMoveTaskId } = this.state;\n    try {\n      let res = await seafileAPI.queryAsyncOperationProgress(asyncCopyMoveTaskId);\n      let data = res.data;\n      if (data.failed) {\n        let message = gettext('Failed to copy files to another library.');\n        toaster.danger(message);\n        this.setState({\n          asyncOperationProgress: 0,\n          isCopyMoveProgressDialogShow: false,\n        });\n        return;\n      }\n\n      if (data.successful) {\n        this.setState({\n          asyncOperationProgress: 0,\n          isCopyMoveProgressDialogShow: false,\n        });\n        let message = gettext('Successfully copied files to another library.');\n        toaster.success(message);\n        return;\n      }\n      // init state: total is 0\n      let asyncOperationProgress = !data.total ? 0 : parseInt((data.done/data.total * 100).toFixed(2));\n\n      this.getAsyncCopyMoveProgress();\n      this.setState({asyncOperationProgress: asyncOperationProgress});\n    } catch (error) {\n      this.setState({\n        asyncOperationProgress: 0,\n        isCopyMoveProgressDialogShow: false,\n      });\n    }\n  }\n\n  saveSelectedItems = () => {\n    this.setState({\n      isSaveSharedDirDialogShow: true,\n      itemsForSave: this.state.items.filter(item => item.isSelected)\n        .map(item => item.file_name || item.folder_name)\n    });\n  }\n\n  saveAllItems = () => {\n    this.setState({\n      isSaveSharedDirDialogShow: true,\n      itemsForSave: this.state.items\n        .map(item => item.file_name || item.folder_name)\n    });\n  }\n\n  toggleSaveSharedDirCancel = () => {\n    this.setState({\n      isSaveSharedDirDialogShow: false,\n      itemsForSave: []\n    });\n  }\n\n  handleSaveSharedDir = (destRepoID, dstPath) => {\n\n    const itemsForSave = this.state.itemsForSave;\n\n    seafileAPI.saveSharedDir(destRepoID, dstPath, token, relativePath, itemsForSave).then((res) => {\n      this.setState({\n        isSaveSharedDirDialogShow: false,\n        itemsForSave: [],\n        isCopyMoveProgressDialogShow: true,\n        asyncCopyMoveTaskId: res.data.task_id,\n        asyncOperatedFilesLength: itemsForSave.length,\n      }, () => {\n        this.getAsyncCopyMoveProgress();\n      });\n    }).catch((error) => {\n      let errMessage = Utils.getErrorMsg(error);\n      this.setState({errMessage: errMessage});\n    });\n  }\n\n  onProgressDialogToggle = () => {\n    let { asyncOperationProgress } = this.state;\n    if (asyncOperationProgress !== 100) {\n      let taskId = this.state.asyncCopyMoveTaskId;\n      seafileAPI.cancelCopyMoveOperation(taskId);\n    }\n\n    this.setState({\n      asyncOperationProgress: 0,\n      isCopyMoveProgressDialogShow: false,\n    });\n  }\n\n  closeZipDialog = () => {\n    this.setState({\n      isZipDialogOpen: false,\n      zipFolderPath: '',\n      selectedItems: []\n    });\n  }\n\n  // for image popup\n  prepareImageItem = (item) => {\n    const name = item.file_name;\n    const fileExt = name.substr(name.lastIndexOf('.') + 1).toLowerCase();\n    const isGIF = fileExt == 'gif';\n\n    let src;\n    const fileURL = `${siteRoot}d/${token}/files/?p=${encodeURIComponent(item.file_path)}`;\n    if (!isGIF) {\n      src = `${siteRoot}thumbnail/${token}/${thumbnailSizeForOriginal}${Utils.encodePath(item.file_path)}`;\n    } else {\n      src = `${fileURL}&raw=1`;\n    }\n\n    return {\n      'name': name,\n      'url': fileURL,\n      'src': src\n    };\n  }\n\n  showImagePopup = (curItem) => {\n    const items = this.state.items.filter((item) => {\n      return !item.is_dir && Utils.imageCheck(item.file_name);\n    });\n    const imageItems = items.map((item) => {\n      return this.prepareImageItem(item);\n    });\n\n    this.setState({\n      isImagePopupOpen: true,\n      imageItems: imageItems,\n      imageIndex: items.indexOf(curItem)\n    });\n  }\n\n  closeImagePopup = () => {\n    this.setState({\n      isImagePopupOpen: false\n    });\n  }\n\n  moveToPrevImage = () => {\n    const imageItemsLength = this.state.imageItems.length;\n    this.setState((prevState) => ({\n      imageIndex: (prevState.imageIndex + imageItemsLength - 1) % imageItemsLength\n    }));\n  }\n\n  moveToNextImage = () => {\n    const imageItemsLength = this.state.imageItems.length;\n    this.setState((prevState) => ({\n      imageIndex: (prevState.imageIndex + 1) % imageItemsLength\n    }));\n  }\n\n  toggleAllSelected = () => {\n    this.setState((prevState) => ({\n      isAllItemsSelected: !prevState.isAllItemsSelected,\n      items: this.state.items.map((item) => {\n        item.isSelected = !prevState.isAllItemsSelected;\n        return item;\n      })\n    }));\n  }\n\n  toggleItemSelected = (targetItem, isSelected) => {\n    this.setState({\n      items: this.state.items.map((item) => {\n        if (item === targetItem) {\n          item.isSelected = isSelected;\n        }\n        return item;\n      })\n    }, () => {\n      this.setState({\n        isAllItemsSelected: !this.state.items.some(item => !item.isSelected)\n      });\n    });\n  }\n\n  onUploadFile = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    this.uploader.onFileUpload();\n  }\n\n  onFileUploadSuccess = (direntObject) => {\n    const { name, size } = direntObject;\n    const newItem = {\n      isSelected: false,\n      file_name: name,\n      file_path: Utils.joinPath(relativePath, name),\n      is_dir: false,\n      last_modified: moment().format(),\n      size: size\n    };\n    const folderItems = this.state.items.filter(item => { return item.is_dir; });\n    // put the new file as the first file\n    let items = Array.from(this.state.items);\n    items.splice(folderItems.length, 0, newItem);\n    this.setState({items: items});\n    seafileAPI.shareLinksUploadDone(token, Utils.joinPath(dirPath, name));\n  }\n\n  getShareLinkRepoTags = () => {\n    seafileAPI.getShareLinkRepoTags(token).then(res => {\n      let usedRepoTags = [];\n      res.data.repo_tags.forEach(item => {\n        let usedRepoTag = new RepoTag(item);\n        if (usedRepoTag.fileCount > 0) {\n          usedRepoTags.push(usedRepoTag);\n        }\n      });\n      this.setState({usedRepoTags: usedRepoTags});\n      if (usedRepoTags.length != 0 && relativePath == '/') {\n        this.setState({isRepoInfoBarShow: true});\n      }\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  render() {\n    const isDesktop = Utils.isDesktop();\n    const modeBaseClass = 'btn btn-secondary btn-icon sf-view-mode-btn';\n    return (\n      <React.Fragment>\n        <div className=\"h-100 d-flex flex-column\">\n          <div className=\"top-header d-flex justify-content-between\">\n            <a href={siteRoot}>\n              <img src={mediaUrl + logoPath} height={logoHeight} width={logoWidth} title={siteTitle} alt=\"logo\" />\n            </a>\n            {loginUser && <Account />}\n          </div>\n          <div className=\"o-auto\">\n            <div className=\"shared-dir-view-main\">\n              <h2 className=\"h3\">{dirName}</h2>\n              <p>{gettext('Shared by: ')}{sharedBy}</p>\n              <div className=\"d-flex justify-content-between align-items-center op-bar\">\n                <p className=\"m-0 mr-4 ellipsis d-flex align-items-center\"><span className=\"flex-none\">{gettext('Current path: ')}</span>{this.renderPath()}</p>\n                <div className=\"flex-none\">\n                  {isDesktop &&\n                  <div className=\"view-mode btn-group\">\n                    <a href={`?p=${encodeURIComponent(relativePath)}&mode=list`} className={`${modeBaseClass} sf2-icon-list-view ${mode == 'list' ? 'current-mode' : ''}`} title={gettext('List')} aria-label={gettext('List')}></a>\n                    <a href={`?p=${encodeURIComponent(relativePath)}&mode=grid`} className={`${modeBaseClass} sf2-icon-grid-view ${mode == 'grid' ? 'current-mode' : ''}`} title={gettext('Grid')} aria-label={gettext('Grid')}></a>\n                  </div>\n                  }\n                  {canUpload && (\n                    <Button disabled={noQuota}\n                      title={noQuota ? gettext('The owner of this library has run out of space.') : ''}\n                      onClick={this.onUploadFile} className=\"ml-2 shared-dir-op-btn shared-dir-upload-btn\">{gettext('Upload')}</Button>\n                  )}\n                  {showDownloadIcon &&\n                  <Fragment>\n                    {this.state.items.some(item => item.isSelected) ?\n                      <Fragment>\n                        <Button color=\"success\" onClick={this.zipDownloadSelectedItems} className=\"ml-2 shared-dir-op-btn\">{gettext('ZIP Selected Items')}</Button>\n                        {(canDownload && loginUser && (loginUser !== sharedBy)) &&\n                        <Button color=\"success\" onClick={this.saveSelectedItems} className=\"ml-2 shared-dir-op-btn\">{gettext('Save Selected Items')}</Button>\n                        }\n                      </Fragment>\n                      :\n                      <Fragment>\n                        <Button color=\"success\" onClick={this.zipDownloadFolder.bind(this, relativePath)} className=\"ml-2 shared-dir-op-btn\">{gettext('ZIP')}</Button>\n                        {(canDownload && loginUser && (loginUser !== sharedBy)) &&\n                        <Button color=\"success\" onClick={this.saveAllItems} className=\"ml-2 shared-dir-op-btn\">{gettext('Save')}</Button>\n                        }\n                      </Fragment>\n                    }\n                  </Fragment>\n                  }\n                </div>\n              </div>\n              {!noQuota && canUpload && (\n                <FileUploader\n                  ref={uploader => this.uploader = uploader}\n                  dragAndDrop={false}\n                  token={token}\n                  path={dirPath === '/' ? dirPath : dirPath.replace(/\\/+$/, '')}\n                  relativePath={relativePath === '/' ? relativePath : relativePath.replace(/\\/+$/, '')}\n                  repoID={repoID}\n                  onFileUploadSuccess={this.onFileUploadSuccess}\n                />\n              )}\n\n              {this.state.isRepoInfoBarShow && (\n                <RepoInfoBar\n                  repoID={repoID}\n                  currentPath={'/'}\n                  usedRepoTags={this.state.usedRepoTags}\n                  shareLinkToken={token}\n                  enableFileDownload={showDownloadIcon}\n                  className=\"mx-0\"\n                />\n              )}\n\n              <Content\n                isDesktop={isDesktop}\n                isLoading={this.state.isLoading}\n                errorMsg={this.state.errorMsg}\n                items={this.state.items}\n                sortBy={this.state.sortBy}\n                sortOrder={this.state.sortOrder}\n                sortItems={this.sortItems}\n                isAllItemsSelected={this.state.isAllItemsSelected}\n                toggleAllSelected={this.toggleAllSelected}\n                toggleItemSelected={this.toggleItemSelected}\n                zipDownloadFolder={this.zipDownloadFolder}\n                showImagePopup={this.showImagePopup}\n              />\n            </div>\n          </div>\n        </div>\n        {this.state.isZipDialogOpen &&\n        <ModalPortal>\n          <ZipDownloadDialog\n            token={token}\n            path={this.state.zipFolderPath}\n            target={this.state.selectedItems}\n            toggleDialog={this.closeZipDialog}\n          />\n        </ModalPortal>\n        }\n        {this.state.isSaveSharedDirDialogShow &&\n          <SaveSharedDirDialog\n            sharedToken={token}\n            parentDir={relativePath}\n            items={this.state.itemsForSave}\n            toggleCancel={this.toggleSaveSharedDirCancel}\n            handleSaveSharedDir={this.handleSaveSharedDir}\n          />\n        }\n        {this.state.isCopyMoveProgressDialogShow && (\n          <CopyMoveDirentProgressDialog\n            type='copy'\n            asyncOperatedFilesLength={this.state.asyncOperatedFilesLength}\n            asyncOperationProgress={this.state.asyncOperationProgress}\n            toggleDialog={this.onProgressDialogToggle}\n          />\n        )}\n        {this.state.isImagePopupOpen &&\n        <ModalPortal>\n          <ImageDialog\n            imageItems={this.state.imageItems}\n            imageIndex={this.state.imageIndex}\n            closeImagePopup={this.closeImagePopup}\n            moveToPrevImage={this.moveToPrevImage}\n            moveToNextImage={this.moveToNextImage}\n          />\n        </ModalPortal>\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nclass Content extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  sortByName = (e) => {\n    e.preventDefault();\n    const sortBy = 'name';\n    const sortOrder = this.props.sortOrder == 'asc' ? 'desc' : 'asc';\n    this.props.sortItems(sortBy, sortOrder);\n  }\n\n  sortByTime = (e) => {\n    e.preventDefault();\n    const sortBy = 'time';\n    const sortOrder = this.props.sortOrder == 'asc' ? 'desc' : 'asc';\n    this.props.sortItems(sortBy, sortOrder);\n  }\n\n  sortBySize = (e) => {\n    e.preventDefault();\n    const sortBy = 'size';\n    const sortOrder = this.props.sortOrder == 'asc' ? 'desc' : 'asc';\n    this.props.sortItems(sortBy, sortOrder);\n  }\n\n  render() {\n    const {\n      isDesktop,\n      isLoading, errorMsg, items,\n      sortBy, sortOrder,\n      isAllItemsSelected\n    } = this.props;\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <p className=\"error mt-6 text-center\">{errorMsg}</p>;\n    }\n\n    const tbody = (\n      <tbody>\n        {items.map((item, index) => {\n          return <Item\n            key={index}\n            isDesktop={isDesktop}\n            item={item}\n            zipDownloadFolder={this.props.zipDownloadFolder}\n            showImagePopup={this.props.showImagePopup}\n            toggleItemSelected={this.props.toggleItemSelected}\n          />;\n        })}\n      </tbody>\n    );\n\n    if (!isDesktop) {\n      return (\n        <table className=\"table-hover table-thead-hidden\">\n          <thead>\n            <tr>\n              <th width=\"12%\"></th>\n              <th width=\"80%\"></th>\n              <th width=\"8%\"></th>\n            </tr>\n          </thead>\n          {tbody}\n        </table>\n      );\n    }\n\n    const sortIcon = <span className={`fas ${sortOrder == 'asc' ? 'fa-caret-up' : 'fa-caret-down'}`}></span>;\n    return mode == 'list' ? (\n      <table className=\"table-hover\">\n        <thead>\n          <tr>\n            {showDownloadIcon &&\n            <th width=\"3%\" className=\"text-center\">\n              <input type=\"checkbox\" checked={isAllItemsSelected} onChange={this.props.toggleAllSelected} />\n            </th>\n            }\n            <th width=\"5%\"></th>\n            <th width={showDownloadIcon ? '50%' : '53%'}><a className=\"d-block table-sort-op\" href=\"#\" onClick={this.sortByName}>{gettext('Name')} {sortBy == 'name' && sortIcon}</a></th>\n            <th width=\"8%\"></th>\n            <th width=\"14%\"><a className=\"d-block table-sort-op\" href=\"#\" onClick={this.sortBySize}>{gettext('Size')} {sortBy == 'size' && sortIcon}</a></th>\n            <th width=\"13%\"><a className=\"d-block table-sort-op\" href=\"#\" onClick={this.sortByTime}>{gettext('Last Update')} {sortBy == 'time' && sortIcon}</a></th>\n            <th width=\"7%\"></th>\n          </tr>\n        </thead>\n        {tbody}\n      </table>\n    ) : (\n      <ul className=\"grid-view\">\n        {items.map((item, index) => {\n          return <GridItem\n            key={index}\n            item={item}\n            zipDownloadFolder={this.props.zipDownloadFolder}\n            showImagePopup={this.props.showImagePopup}\n          />;\n        })}\n      </ul>\n    );\n  }\n}\n\nclass Item extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isIconShown: false,\n      isOpMenuOpen: false\n    };\n  }\n\n  toggleOpMenu = () => {\n    this.setState({isOpMenuOpen: !this.state.isOpMenuOpen});\n  }\n\n  handleMouseOver = () => {\n    this.setState({isIconShown: true});\n  }\n\n  handleMouseOut = () => {\n    this.setState({isIconShown: false});\n  }\n\n  zipDownloadFolder = (e) => {\n    e.preventDefault();\n    this.props.zipDownloadFolder.bind(this, this.props.item.folder_path)();\n  }\n\n  handleFileClick = (e) => {\n    const item = this.props.item;\n    if (!Utils.imageCheck(item.file_name)) {\n      return;\n    }\n\n    e.preventDefault();\n    this.props.showImagePopup(item);\n  }\n\n  toggleItemSelected = (e) => {\n    this.props.toggleItemSelected(this.props.item, e.target.checked);\n  }\n\n  render() {\n    const { item, isDesktop } = this.props;\n    const { isIconShown } = this.state;\n\n    let toolTipID = '';\n    let tagTitle = '';\n    if (item.file_tags && item.file_tags.length > 0) {\n      toolTipID = MD5(item.file_name).slice(0, 7);\n      tagTitle = item.file_tags.map(item => item.tag_name).join(' ');\n    }\n\n    if (item.is_dir) {\n      return isDesktop ? (\n        <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          {showDownloadIcon &&\n            <td className=\"text-center\">\n              <input type=\"checkbox\" checked={item.isSelected} onChange={this.toggleItemSelected} />\n            </td>\n          }\n          <td className=\"text-center\"><img src={Utils.getFolderIconUrl()} alt=\"\" width=\"24\" /></td>\n          <td>\n            <a href={`?p=${encodeURIComponent(item.folder_path.substr(0, item.folder_path.length - 1))}&mode=${mode}`}>{item.folder_name}</a>\n          </td>\n          <td></td>\n          <td></td>\n          <td title={moment(item.last_modified).format('llll')}>{moment(item.last_modified).fromNow()}</td>\n          <td>\n            {showDownloadIcon &&\n            <a role=\"button\" className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href=\"#\" onClick={this.zipDownloadFolder} title={gettext('Download')} aria-label={gettext('Download')}>\n            </a>\n            }\n          </td>\n        </tr>\n      ) : (\n        <tr>\n          <td className=\"text-center\"><img src={Utils.getFolderIconUrl()} alt=\"\" width=\"24\" /></td>\n          <td>\n            <a href={`?p=${encodeURIComponent(item.folder_path.substr(0, item.folder_path.length - 1))}&mode=${mode}`}>{item.folder_name}</a>\n            <br />\n            <span className=\"item-meta-info\">{moment(item.last_modified).fromNow()}</span>\n          </td>\n          <td>\n            {showDownloadIcon &&\n            <Dropdown isOpen={this.state.isOpMenuOpen} toggle={this.toggleOpMenu}>\n              <DropdownToggle\n                tag=\"i\"\n                className=\"sf-dropdown-toggle fa fa-ellipsis-v ml-0\"\n                title={gettext('More Operations')}\n                data-toggle=\"dropdown\"\n                aria-expanded={this.state.isOpMenuOpen}\n              />\n              <div className={this.state.isOpMenuOpen ? '' : 'd-none'} onClick={this.toggleOpMenu}>\n                <div className=\"mobile-operation-menu-bg-layer\"></div>\n                <div className=\"mobile-operation-menu\">\n                  <DropdownItem className=\"mobile-menu-item\" onClick={this.zipDownloadFolder}>{gettext('Download')}</DropdownItem>\n                </div>\n              </div>\n            </Dropdown>\n            }\n          </td>\n        </tr>\n      );\n    } else {\n      const fileURL = `${siteRoot}d/${token}/files/?p=${encodeURIComponent(item.file_path)}`;\n      const thumbnailURL = item.encoded_thumbnail_src ? `${siteRoot}${item.encoded_thumbnail_src}` : '';\n      return isDesktop ? (\n        <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          {showDownloadIcon &&\n            <td className=\"text-center\">\n              <input type=\"checkbox\" checked={item.isSelected} onChange={this.toggleItemSelected} />\n            </td>\n          }\n          <td className=\"text-center\">\n            {thumbnailURL ?\n              <img className=\"thumbnail\" src={thumbnailURL} alt=\"\" /> :\n              <img src={Utils.getFileIconUrl(item.file_name)} alt=\"\" width=\"24\" />\n            }\n          </td>\n          <td>\n            <a href={fileURL} onClick={this.handleFileClick}>{item.file_name}</a>\n          </td>\n          <td className=\"tag-list-title\">\n            {(item.file_tags && item.file_tags.length > 0) && (\n              <Fragment>\n                <div id={`tag-list-title-${toolTipID}`} className=\"dirent-item tag-list tag-list-stacked\">\n                  {item.file_tags.map((fileTag, index) => {\n                    let length = item.file_tags.length;\n                    return (\n                      <span className=\"file-tag\" key={fileTag.file_tag_id} style={{zIndex:length - index, backgroundColor:fileTag.tag_color}}></span>\n                    );\n                  })}\n                </div>\n                <UncontrolledTooltip target={`tag-list-title-${toolTipID}`} placement=\"bottom\">\n                  {tagTitle}\n                </UncontrolledTooltip>\n              </Fragment>\n            )}\n          </td>\n          <td>{Utils.bytesToSize(item.size)}</td>\n          <td title={moment(item.last_modified).format('llll')}>{moment(item.last_modified).fromNow()}</td>\n          <td>\n            {showDownloadIcon &&\n            <a className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href={`${fileURL}&dl=1`} title={gettext('Download')} aria-label={gettext('Download')}></a>\n            }\n          </td>\n        </tr>\n      ) : (\n        <tr>\n          <td className=\"text-center\">\n            {thumbnailURL ?\n              <img className=\"thumbnail\" src={thumbnailURL} alt=\"\" /> :\n              <img src={Utils.getFileIconUrl(item.file_name)} alt=\"\" width=\"24\" />\n            }\n          </td>\n          <td>\n            <a href={fileURL} onClick={this.handleFileClick}>{item.file_name}</a>\n            <br />\n            <span className=\"item-meta-info\">{Utils.bytesToSize(item.size)}</span>\n            <span className=\"item-meta-info\">{moment(item.last_modified).fromNow()}</span>\n          </td>\n          <td>\n            {showDownloadIcon &&\n            <Dropdown isOpen={this.state.isOpMenuOpen} toggle={this.toggleOpMenu}>\n              <DropdownToggle\n                tag=\"i\"\n                className=\"sf-dropdown-toggle fa fa-ellipsis-v ml-0\"\n                title={gettext('More Operations')}\n                data-toggle=\"dropdown\"\n                aria-expanded={this.state.isOpMenuOpen}\n              />\n              <div className={this.state.isOpMenuOpen ? '' : 'd-none'} onClick={this.toggleOpMenu}>\n                <div className=\"mobile-operation-menu-bg-layer\"></div>\n                <div className=\"mobile-operation-menu\">\n                  <DropdownItem className=\"mobile-menu-item\" tag=\"a\" href={`${fileURL}&dl=1`}>{gettext('Download')}</DropdownItem>\n                </div>\n              </div>\n            </Dropdown>\n            }\n          </td>\n        </tr>\n      );\n    }\n  }\n}\n\nclass GridItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isIconShown: false\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({isIconShown: true});\n  }\n\n  handleMouseOut = () => {\n    this.setState({isIconShown: false});\n  }\n\n  zipDownloadFolder = (e) => {\n    e.preventDefault();\n    this.props.zipDownloadFolder.bind(this, this.props.item.folder_path)();\n  }\n\n  handleFileClick = (e) => {\n    const item = this.props.item;\n    if (!Utils.imageCheck(item.file_name)) {\n      return;\n    }\n\n    e.preventDefault();\n    this.props.showImagePopup(item);\n  }\n\n  render() {\n    const item = this.props.item;\n    const { isIconShown } = this.state;\n\n    if (item.is_dir) {\n      const folderURL = `?p=${encodeURIComponent(item.folder_path.substr(0, item.folder_path.length - 1))}&mode=${mode}`;\n      return (\n        <li className=\"grid-item\" onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          <a href={folderURL} className=\"grid-file-img-link d-block\">\n            <img src={Utils.getFolderIconUrl(false, 192)} alt=\"\" width=\"96\" height=\"96\" />\n          </a>\n          <a href={folderURL} className=\"grid-file-name grid-file-name-link\">{item.folder_name}</a>\n          {showDownloadIcon &&\n            <a role=\"button\" className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href=\"#\" onClick={this.zipDownloadFolder} title={gettext('Download')} aria-label={gettext('Download')}>\n            </a>\n          }\n        </li>\n      );\n    } else {\n      const fileURL = `${siteRoot}d/${token}/files/?p=${encodeURIComponent(item.file_path)}`;\n      const thumbnailURL = item.encoded_thumbnail_src ? `${siteRoot}${item.encoded_thumbnail_src}` : '';\n      return (\n        <li className=\"grid-item\" onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          <a href={fileURL} className=\"grid-file-img-link d-block\" onClick={this.handleFileClick}>\n            {thumbnailURL ?\n              <img className=\"thumbnail\" src={thumbnailURL} alt=\"\" /> :\n              <img src={Utils.getFileIconUrl(item.file_name, 192)} alt=\"\" width=\"96\" height=\"96\" />\n            }\n          </a>\n          <a href={fileURL} className=\"grid-file-name grid-file-name-link\" onClick={this.handleFileClick}>{item.file_name}</a>\n          {showDownloadIcon &&\n            <a className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href={`${fileURL}&dl=1`} title={gettext('Download')} aria-label={gettext('Download')}>\n            </a>\n          }\n        </li>\n      );\n    }\n  }\n}\n\nReactDom.render(<SharedDirView />, document.getElementById('wrapper'));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\n\nimport Lightbox from '@seafile/react-image-lightbox';\nimport '@seafile/react-image-lightbox/style.css';\n\nconst propTypes = {\n  imageItems: PropTypes.array.isRequired,\n  imageIndex: PropTypes.number.isRequired,\n  closeImagePopup: PropTypes.func.isRequired,\n  moveToPrevImage: PropTypes.func.isRequired,\n  moveToNextImage: PropTypes.func.isRequired\n};\n\nclass ImageDialog extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const imageItems = this.props.imageItems;\n    const imageIndex = this.props.imageIndex;\n    const imageItemsLength = imageItems.length;\n    const name = imageItems[imageIndex].name;\n    const imageTitle = `${name} (${imageIndex + 1}/${imageItemsLength})`;\n\n    return (\n      <Lightbox\n        imageTitle={imageTitle}\n        mainSrc={imageItems[imageIndex].src}\n        nextSrc={imageItems[(imageIndex + 1) % imageItemsLength].src}\n        prevSrc={imageItems[(imageIndex + imageItemsLength - 1) % imageItemsLength].src}\n        onCloseRequest={this.props.closeImagePopup}\n        onMovePrevRequest={this.props.moveToPrevImage}\n        onMoveNextRequest={this.props.moveToNextImage}\n        imagePadding={70}\n        imageLoadErrorMessage={gettext('The image could not be loaded.')}\n        prevLabel={gettext('Previous (Left arrow key)')}\n        nextLabel={gettext('Next (Right arrow key)')}\n        closeLabel={gettext('Close (Esc)')}\n        zoomInLabel={gettext('Zoom in')}\n        zoomOutLabel={gettext('Zoom out')}\n      />\n    );\n  }\n}\n\nImageDialog.propTypes = propTypes;\n\nexport default ImageDialog;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport moment from 'moment';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  currentTag: PropTypes.object.isRequired,\n  toggleCancel: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  updateUsedRepoTags: PropTypes.func,\n  onFileTagChanged: PropTypes.func,\n  shareLinkToken: PropTypes.string,\n  enableFileDownload: PropTypes.bool\n};\n\nclass ListTaggedFilesDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      taggedFileList: [],\n    };\n  }\n\n  onFileTagChanged = (TaggedFile) => {\n    const path = TaggedFile.parent_path;\n    const dirent = {name: TaggedFile.filename};\n    let direntPath = path === '/' ? path + TaggedFile.filename : path + '/' + TaggedFile.filename;\n    this.props.onFileTagChanged(dirent, direntPath);\n  }\n\n  onDeleteTaggedFile = (taggedFile) => {\n    let repoID = this.props.repoID;\n    let fileTagID = taggedFile.file_tag_id;\n    seafileAPI.deleteFileTag(repoID, fileTagID).then(res => {\n      this.getTaggedFiles();\n      this.props.updateUsedRepoTags();\n      if ((this.props.onFileTagChanged) && !taggedFile.file_deleted) this.onFileTagChanged(taggedFile);\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  componentDidMount() {\n    this.getTaggedFiles();\n  }\n\n  getTaggedFiles = () => {\n    let { repoID, currentTag, shareLinkToken } = this.props;\n    let request = shareLinkToken ?\n      seafileAPI.getShareLinkTaggedFiles(shareLinkToken, currentTag.id) :\n      seafileAPI.listTaggedFiles(repoID, currentTag.id);\n    request.then(res => {\n      let taggedFileList = [];\n      res.data.tagged_files !== undefined &&\n      res.data.tagged_files.forEach(file => {\n        let taggedFile = file;\n        taggedFileList.push(taggedFile);\n      });\n      this.setState({\n        taggedFileList: taggedFileList,\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  render() {\n    let taggedFileList = this.state.taggedFileList;\n    return (\n      <Modal isOpen={true} style={{maxWidth: '678px'}}>\n        <ModalHeader toggle={this.props.onClose}>{gettext('Tagged Files')}</ModalHeader>\n        <ModalBody className=\"dialog-list-container\">\n          <table>\n            <thead>\n              <tr>\n                <th width='50%' className=\"ellipsis\">{gettext('Name')}</th>\n                <th width='20%'>{gettext('Size')}</th>\n                <th width='22%'>{gettext('Last Update')}</th>\n                <th width='8%'></th>\n              </tr>\n            </thead>\n            <tbody>\n              {taggedFileList.map((taggedFile, index) => {\n                return (\n                  <TaggedFile\n                    key={index}\n                    repoID={this.props.repoID}\n                    taggedFile={taggedFile}\n                    onDeleteTaggedFile={this.onDeleteTaggedFile}\n                    shareLinkToken={this.props.shareLinkToken}\n                    enableFileDownload={this.props.enableFileDownload}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggleCancel}>{gettext('Close')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nListTaggedFilesDialog.propTypes = propTypes;\n\nexport default ListTaggedFilesDialog;\n\nconst TaggedFilePropTypes = {\n  repoID: PropTypes.string.isRequired,\n  taggedFile: PropTypes.object,\n  onDeleteTaggedFile: PropTypes.func.isRequired,\n  shareLinkToken: PropTypes.string,\n  enableFileDownload: PropTypes.bool\n};\n\nclass TaggedFile extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = ({\n      active: false,\n    });\n  }\n\n  onMouseEnter = () => {\n    this.setState({\n      active: true\n    });\n  }\n\n  onMouseLeave = () => {\n    this.setState({\n      active: false\n    });\n  }\n\n  deleteFile = (e) => {\n    e.preventDefault();\n    this.props.onDeleteTaggedFile(this.props.taggedFile);\n  }\n\n  render() {\n    const { taggedFile, shareLinkToken, enableFileDownload } = this.props;\n\n    let path = taggedFile.parent_path ? Utils.joinPath(taggedFile.parent_path, taggedFile.filename) : '';\n    let href = shareLinkToken ?\n      siteRoot + 'd/' + shareLinkToken + '/files/?p=' + Utils.encodePath(path) :\n      siteRoot + 'lib/' + this.props.repoID + '/file' + Utils.encodePath(path);\n\n    return (\n      <tr onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave} onFocus={this.onMouseEnter}>\n        {taggedFile.file_deleted ?\n          <Fragment>\n            <td colSpan='3' className=\"name\">{taggedFile.filename}{' '}\n              <span style={{color:'red'}}>{gettext('deleted')}</span>\n            </td>\n          </Fragment>\n          :\n          <Fragment>\n            <td><a href={href} target='_blank' className=\"d-inline-block w-100 ellipsis\" title={taggedFile.filename} rel=\"noreferrer\">{taggedFile.filename}</a></td>\n            <td>{Utils.bytesToSize(taggedFile.size)}</td>\n            <td>{moment.unix(taggedFile.mtime).fromNow()}</td>\n          </Fragment>\n        }\n        <td>\n          {!shareLinkToken &&\n            <a href=\"#\" role=\"button\" aria-label={gettext('Delete')} title={gettext('Delete')} className={`action-icon sf2-icon-x3${this.state.active ? '' : ' invisible'}`} onClick={this.deleteFile}></a>\n          }\n          {(shareLinkToken && enableFileDownload) &&\n            <a className={`action-icon sf2-icon-download${this.state.active ? '' : ' invisible'}`} href={`${href}&dl=1`} title={gettext('Download')} aria-label={gettext('Download')}></a>\n          }\n        </td>\n      </tr>\n    );\n  }\n}\n\nTaggedFile.propTypes = TaggedFilePropTypes;\n","import moment from 'moment';\n\nclass Draft {\n\n  constructor(item) {\n    this.created = item.created_at;\n    this.createdStr = moment((new Date(item.created_at)).getTime()).format('YYYY-MM-DD HH:mm');\n    this.id = item.id;\n    this.ownerNickname = item.owner_nickname;\n    this.originRepoID = item.origin_repo_id;\n    this.draftFilePath = item.draft_file_path;\n  }\n}\n\nexport default Draft;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport moment from 'moment';\nimport editorUtilities from '../../utils/editor-utilities';\nimport toaster from '../../components/toast';\nimport { Utils } from '../../utils/utils';\nimport Draft from '../../models/draft';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired,\n};\n\nclass ListRepoDraftsDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      drafts: [],\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.listRepoDrafts(this.props.repoID).then(res => {\n      let drafts = res.data.drafts.map(item => {\n        let draft = new Draft(item);\n        return draft;\n      });\n      this.setState({\n        drafts: drafts\n      });\n    });\n  }\n\n  onDeleteDraftItem = (draft) => {\n    editorUtilities.deleteDraft(draft.id).then(() => {\n      let drafts = this.state.drafts.filter(item => {\n        return item.id !== draft.id;\n      });\n      this.setState({drafts: drafts});\n      let msg = gettext('Successfully deleted draft %(draft)s.');\n      msg = msg.replace('%(draft)s', draft.draftFilePath);\n      toaster.success(msg);\n    }).catch(() => {\n      let msg = gettext('Failed to delete draft %(draft)s.');\n      msg = msg.replace('%(draft)s', draft.draftFilePath);\n      toaster.danger(msg);\n    });\n  }\n\n  toggle = () => {\n    this.props.toggle();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true}>\n        <ModalHeader toggle={this.toggle}>{gettext('Drafts')}</ModalHeader>\n        <ModalBody className=\"dialog-list-container\">\n          <table>\n            <thead>\n              <tr>\n                <th width='50%' className=\"ellipsis\">{gettext('Name')}</th>\n                <th width='20%'>{gettext('Owner')}</th>\n                <th width='20%'>{gettext('Last Update')}</th>\n                <th width='10%'></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.drafts.map((item, index) => {\n                return (\n                  <DraftItem\n                    key={index}\n                    draftItem={item}\n                    onDeleteDraftItem={this.onDeleteDraftItem}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.toggle}>{gettext('Close')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nListRepoDraftsDialog.propTypes = propTypes;\n\nexport default ListRepoDraftsDialog;\n\nconst DraftItemPropTypes = {\n  draftItem: PropTypes.object,\n  onDeleteDraftItem: PropTypes.func.isRequired,\n};\n\nclass DraftItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = ({\n      active: false,\n    });\n  }\n\n  onMouseEnter = () => {\n    this.setState({\n      active: true\n    });\n  }\n\n  onMouseLeave = () => {\n    this.setState({\n      active: false\n    });\n  }\n\n  render() {\n    const draftItem = this.props.draftItem;\n    let href = siteRoot + 'drafts/' + draftItem.id + '/';\n    let className = this.state.active ? 'action-icon sf2-icon-x3' : 'action-icon vh sf2-icon-x3';\n    return (\n      <tr onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n        <td className=\"name\">\n          <a href={href} target='_blank'>{Utils.getFileName(draftItem.draftFilePath)}</a>\n        </td>\n        <td>{draftItem.ownerNickname}</td>\n        <td>{moment(draftItem.createdStr).fromNow()}</td>\n        <td>\n          <i className={className} onClick={this.props.onDeleteDraftItem.bind(this, draftItem)}></i>\n        </td>\n      </tr>\n    );\n  }\n}\n\nDraftItem.propTypes = DraftItemPropTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { MarkdownViewer } from '@seafile/seafile-editor';\nimport Loading from '../../components/loading';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { gettext, mediaUrl } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  filePath: PropTypes.string.isRequired,\n  fileName: PropTypes.string.isRequired,\n  href: PropTypes.string,\n  toggleCancel: PropTypes.func.isRequired,\n};\n\nclass ReadmeDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      readmeContent: null,\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.getFileDownloadLink(this.props.repoID, this.props.filePath).then(res => {\n      seafileAPI.getFileContent(res.data).then(res => {\n        this.setState({\n          readmeContent: res.data,\n          isLoading: false,\n        });\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true} toggle={this.props.toggleCancel} className=\"readme-dialog\" size=\"lg\">\n        <ModalHeader>{this.props.fileName}\n          <a className=\"readme-dialog-edit\" href={this.props.href} target='_blank'><i className=\"fa fa-pencil-alt\"></i></a>\n        </ModalHeader>\n        <ModalBody>\n          {this.state.isLoading ?\n            <Loading />:\n            <MarkdownViewer\n              markdownContent={this.state.readmeContent}\n              showTOC={false}\n              scriptSource={mediaUrl + 'js/mathjax/tex-svg.js'}\n            />\n          }\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggleCancel}>{gettext('Close')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nReadmeDialog.propTypes = propTypes;\n\nexport default ReadmeDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ModalPortal from './modal-portal';\nimport ListTaggedFilesDialog from './dialog/list-taggedfiles-dialog';\nimport ListRepoDraftsDialog from './dialog/list-repo-drafts-dialog';\nimport ReadmeDialog from './dialog/readme-dialog';\nimport { siteRoot, gettext } from '../utils/constants';\nimport { Utils } from '../utils/utils';\n\nimport '../css/repo-info-bar.css';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  currentPath: PropTypes.string.isRequired,\n  usedRepoTags: PropTypes.array.isRequired,\n  readmeMarkdown: PropTypes.object,\n  draftCounts: PropTypes.number,\n  updateUsedRepoTags: PropTypes.func,\n  onFileTagChanged: PropTypes.func,\n  className: PropTypes.string,\n  shareLinkToken: PropTypes.string,\n  enableFileDownload: PropTypes.bool\n};\n\nclass RepoInfoBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTag: null,\n      isListTaggedFileShow: false,\n      showRepoDrafts: false,\n      showReadmeDialog: false,\n    };\n  }\n\n  onListTaggedFiles = (currentTag) => {\n    this.setState({\n      currentTag: currentTag,\n      isListTaggedFileShow: !this.state.isListTaggedFileShow,\n    });\n  }\n\n  onCloseDialog = () => {\n    this.setState({\n      isListTaggedFileShow: false\n    });\n  }\n\n  toggleDrafts = () => {\n    this.setState({\n      showRepoDrafts: !this.state.showRepoDrafts\n    });\n  }\n\n  toggleReadme = () => {\n    this.setState({\n      showReadmeDialog: !this.state.showReadmeDialog\n    });\n  }\n\n  render() {\n    let { repoID, currentPath, usedRepoTags, readmeMarkdown, draftCounts, className } = this.props;\n\n    // to be compatible with the existing code\n    if (readmeMarkdown === undefined) {\n      readmeMarkdown = null;\n    }\n    if (draftCounts === undefined) {\n      draftCounts = 0;\n    }\n\n    let href = readmeMarkdown !== null ? siteRoot + 'lib/' + repoID + '/file' + Utils.joinPath(currentPath, readmeMarkdown.name) +  '?mode=edit' : '';\n    let filePath = readmeMarkdown !== null ? currentPath + readmeMarkdown.name : '';\n    return (\n      <div className={`repo-info-bar ${className ? className : ''}`}>\n        {usedRepoTags.length > 0 && (\n          <ul className=\"used-tag-list\">\n            {usedRepoTags.map((usedRepoTag) => {\n              return (\n                <li key={usedRepoTag.id} className=\"used-tag-item\">\n                  <span className=\"used-tag\" style={{backgroundColor:usedRepoTag.color}}></span>\n                  <span className=\"used-tag-name\" title={usedRepoTag.name}>{usedRepoTag.name}</span>\n                  <button type=\"button\" className=\"used-tag-files border-0 bg-transparent\" onClick={this.onListTaggedFiles.bind(this, usedRepoTag)}>\n                    {usedRepoTag.fileCount > 1 ? usedRepoTag.fileCount + ' files' : usedRepoTag.fileCount + ' file'}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n        <div className={(usedRepoTags.length > 0 && readmeMarkdown) ? 'file-info-list mt-1' : 'file-info-list'}>\n          {(readmeMarkdown !== null && parseInt(readmeMarkdown.size) > 1) &&\n            <span className=\"file-info\" onClick={this.toggleReadme}>\n              <span className=\"info-icon sf2-icon-readme\"></span>\n              <span className=\"used-tag-name\">{readmeMarkdown.name}</span>\n            </span>\n          }\n          {(readmeMarkdown !== null && parseInt(readmeMarkdown.size) < 2) &&\n            <span className=\"file-info\">\n              <span className=\"info-icon sf2-icon-readme\"></span>\n              <a className=\"used-tag-name\" href={href} target='_blank' rel=\"noreferrer\">{readmeMarkdown.name}</a>\n            </span>\n          }\n          {draftCounts > 0 &&\n            <span className=\"file-info\">\n              <span className=\"info-icon sf2-icon-drafts\"></span>\n              <span className=\"used-tag-name\">{gettext('draft')}</span>\n              <button type=\"button\" className=\"used-tag-files border-0 bg-transparent\" onClick={this.toggleDrafts}>\n                {draftCounts > 1 ? draftCounts + ' files' : draftCounts + ' file'}\n              </button>\n            </span>\n          }\n        </div>\n        {this.state.isListTaggedFileShow && (\n          <ModalPortal>\n            <ListTaggedFilesDialog\n              repoID={repoID}\n              currentTag={this.state.currentTag}\n              onClose={this.onCloseDialog}\n              toggleCancel={this.onListTaggedFiles}\n              updateUsedRepoTags={this.props.updateUsedRepoTags}\n              onFileTagChanged={this.props.onFileTagChanged}\n              shareLinkToken={this.props.shareLinkToken}\n              enableFileDownload={this.props.enableFileDownload}\n            />\n          </ModalPortal>\n        )}\n\n        {this.state.showRepoDrafts && (\n          <ModalPortal>\n            <ListRepoDraftsDialog\n              toggle={this.toggleDrafts}\n              repoID={this.props.repoID}\n            />\n          </ModalPortal>\n        )}\n\n        {this.state.showReadmeDialog && (\n          <ModalPortal>\n            <ReadmeDialog\n              toggleCancel={this.toggleReadme}\n              repoID={repoID}\n              filePath={filePath}\n              href={href}\n              fileName={readmeMarkdown.name}\n            />\n          </ModalPortal>\n        )}\n      </div>\n    );\n  }\n}\n\nRepoInfoBar.propTypes = propTypes;\n\nexport default RepoInfoBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  type: PropTypes.oneOf(['move', 'copy']).isRequired,\n  asyncOperatedFilesLength: PropTypes.number.isRequired,\n  asyncOperationProgress: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  toggleDialog: PropTypes.func.isRequired,\n};\n\nclass CopyMoveDirentProgressDialog extends React.Component {\n\n  render() {\n\n    let { type , asyncOperationProgress, asyncOperatedFilesLength } = this.props;\n    let title = type === 'move' ? gettext('Move {num} items') : gettext('Copy {num} items');\n    title = title.replace('{num}', asyncOperatedFilesLength);\n    let progressStyle = {\n      width: asyncOperationProgress + '%',\n      lineHeight: '40px',\n      textAlign: 'left',\n    };\n    return (\n      <Modal isOpen={true}>\n        <ModalHeader toggle={this.props.toggleDialog}>{title}</ModalHeader>\n        <ModalBody style={{minHeight: '80px'}}>\n          <div className=\"progress\" style={{height: '40px'}}>\n            <div\n              className=\"progress-bar pl-2\"\n              role=\"progressbar\"\n              style={progressStyle}\n              aria-valuenow={asyncOperationProgress}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            >\n              {asyncOperationProgress + '%'}\n            </div>\n          </div>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nCopyMoveDirentProgressDialog.propTypes = propTypes;\n\nexport default CopyMoveDirentProgressDialog;\n"],"sourceRoot":""}