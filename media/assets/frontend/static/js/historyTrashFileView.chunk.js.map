{"version":3,"sources":["components/history-trash-file-view/download.js","components/history-trash-file-view/file-view.js","components/history-trash-file-view/file-view-tip.js","components/file-content-view/text.js","components/file-content-view/markdown.js","components/file-content-view/sdoc.js","history-trash-file-view.js","components/file-content-view/image.js","components/file-content-view/svg.js","components/file-content-view/pdf.js","components/file-content-view/video.js","components/file-content-view/audio.js"],"names":["window","app","pageOptions","fileName","repoID","objID","path","Download","href","siteRoot","encodeURIComponent","className","gettext","fromTrash","commitTime","canDownloadFile","enableWatermark","userNickName","FileView","props","this","content","React","Component","watermark","init","watermark_txt","siteName","watermark_alpha","err","UNSUPPORTED","FileViewTip","errorMsg","fileExt","fileContent","FileContent","value","markdownContent","showTOC","scriptSource","mediaUrl","document","JSON","parse","fileType","HistoryTrashFileView","tip","ReactDom","render","getElementById","previousImageUrl","nextImageUrl","repoEncrypted","filePath","thumbnailSizeForOriginal","previousImage","nextImage","rawPath","xmindImageSrc","Utils","encodePath","handleLoadFailure","setState","loadFailed","state","addEventListener","e","keyCode","location","thumbnailURL","includes","xmindSrc","id","title","src","alt","onError","videoJsOptions","autoplay","controls","preload","playbackRates","sources"],"mappings":"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","file":"static/js/historyTrashFileView.chunk.js","sourcesContent":["import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nconst {\n  fileName, repoID, objID, path\n} = window.app.pageOptions;\n\nfunction Download() {\n  return (\n    <a href={`${siteRoot}repo/${repoID}/${objID}/download/?file_name=${encodeURIComponent(fileName)}&p=${encodeURIComponent(path)}`} className=\"btn btn-secondary\">{gettext('Download')}</a>\n  );\n}\n\nexport default Download;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport watermark from 'watermark-dom';\nimport { gettext, siteName } from '../../utils/constants';\nimport Download from './download';\n\nimport '../../css/file-view.css';\n\nconst propTypes = {\n  content: PropTypes.object.isRequired\n};\n\nconst {\n  fromTrash,\n  fileName, commitTime,\n  canDownloadFile,\n  enableWatermark, userNickName\n} = window.app.pageOptions;\n\n\nclass FileView extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"h-100 d-flex flex-column flex-1\">\n        <div className=\"file-view-header d-flex justify-content-between align-items-center\">\n          <div>\n            <h2 className=\"file-title\">{fileName}</h2>\n            <p className=\"meta-info m-0\">{fromTrash ? `${gettext('Current Path: ')}${gettext('Trash')}`: commitTime}</p>\n          </div>\n          {canDownloadFile && <Download />}\n        </div>\n        <div className=\"file-view-body flex-auto d-flex o-hidden\">\n          {this.props.content}\n        </div>\n      </div>\n    );\n  }\n}\n\nif (enableWatermark) {\n  watermark.init({\n    watermark_txt: `${siteName} ${userNickName}`,\n    watermark_alpha: 0.075\n  });\n}\n\nFileView.propTypes = propTypes;\n\nexport default FileView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport Download from './download';\n\nconst propTypes = {\n  err: PropTypes.string\n};\nconst { canDownloadFile, err } = window.app.pageOptions;\nconst UNSUPPORTED = 'File preview unsupported';\n\nclass FileViewTip extends React.Component {\n\n  render() {\n    let errorMsg;\n    if (err == UNSUPPORTED || this.props.err == UNSUPPORTED) {\n      errorMsg = <p>{gettext('Online view is not applicable to this file format')}</p>;\n    } else {\n      errorMsg = <p className=\"error\">{err}</p>;\n    }\n\n    return (\n      <div className=\"file-view-content flex-1 o-auto\">\n        <div className=\"file-view-tip\">\n          {errorMsg}\n          {canDownloadFile && <Download />}\n        </div>\n      </div>\n    );\n  }\n}\nFileViewTip.propTypes = propTypes;\n\nexport default FileViewTip;\n","import React from 'react';\nimport SeafileCodeMirror from '../seafile-codemirror';\nimport '../../css/text-file-view.css';\n\nconst { fileExt, fileContent } = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 text-file-view\">\n        <SeafileCodeMirror fileExt={fileExt} value={fileContent} />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport { MarkdownViewer } from '@seafile/seafile-editor';\nimport { mediaUrl } from '../../utils/constants';\n\nimport '../../css/md-file-view.css';\n\nconst { fileContent } = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 o-auto\">\n        <div className=\"md-content\">\n          <MarkdownViewer\n            markdownContent={fileContent}\n            showTOC={false}\n            scriptSource={mediaUrl + 'js/mathjax/tex-svg.js'}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport { SDocViewer } from '@seafile/sdoc-editor';\n\nimport '../../css/sdoc-file-view.css';\n\nconst { fileContent } = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n\n  render() {\n    const document = fileContent ? JSON.parse(fileContent) : null;\n    return (\n      <div className=\"file-view-content flex-1 o-auto sdoc-file-view p-0 d-flex flex-column\">\n        <SDocViewer document={document} />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport FileView from './components/history-trash-file-view/file-view';\nimport FileViewTip from './components/history-trash-file-view/file-view-tip';\nimport Image from './components/file-content-view/image';\nimport SVG from './components/file-content-view/svg';\nimport PDF from './components/file-content-view/pdf';\nimport Text from './components/file-content-view/text';\nimport Markdown from './components/file-content-view/markdown';\nimport SDoc from './components/file-content-view/sdoc';\nimport Video from './components/file-content-view/video';\nimport Audio from './components/file-content-view/audio';\n\nconst {\n  fileType, err\n} = window.app.pageOptions;\n\nclass HistoryTrashFileView extends React.Component {\n\n  render() {\n    if (err) {\n      return (\n        <FileView content={<FileViewTip />} />\n      );\n    }\n\n    let content;\n    switch (fileType) {\n      case 'Image':\n        content = <Image tip={<FileViewTip />} />;\n        break;\n      case 'SVG':\n        content = <SVG />;\n        break;\n      case 'PDF':\n        content = <PDF />;\n        break;\n      case 'Text':\n        content = <Text />;\n        break;\n      case 'Markdown':\n        content = <Markdown />;\n        break;\n      case 'SDoc':\n        content = <SDoc />;\n        break;\n      case 'Video':\n        content = <Video />;\n        break;\n      case 'Audio':\n        content = <Audio />;\n        break;\n      default:\n        content = <FileViewTip err='File preview unsupported' />;\n    }\n\n    return (\n      <FileView content={content} />\n    );\n  }\n}\n\nReactDom.render(<HistoryTrashFileView />, document.getElementById('wrapper'));\n","import React from 'react';\nimport { Utils } from '../../utils/utils';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nimport '../../css/image-file-view.css';\n\nconst {\n  repoID, repoEncrypted,\n  fileExt, filePath, fileName,\n  thumbnailSizeForOriginal,\n  previousImage, nextImage, rawPath,\n  xmindImageSrc // for xmind file\n} = window.app.pageOptions;\n\nlet previousImageUrl, nextImageUrl;\nif (previousImage) {\n  previousImageUrl = `${siteRoot}lib/${repoID}/file${Utils.encodePath(previousImage)}`;\n}\nif (nextImage) {\n  nextImageUrl = `${siteRoot}lib/${repoID}/file${Utils.encodePath(nextImage)}`;\n}\n\nclass FileContent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadFailed: false\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', (e) => {\n      if (previousImage && e.keyCode == 37) { // press '<-'\n        location.href = previousImageUrl;\n      }\n      if (nextImage && e.keyCode == 39) { // press '->'\n        location.href = nextImageUrl;\n      }\n    });\n  }\n\n  handleLoadFailure = () => {\n    this.setState({\n      loadFailed: true\n    });\n  }\n\n  render() {\n    if (this.state.loadFailed) {\n      return this.props.tip;\n    }\n\n    // request thumbnails for some files\n    // only for 'file view'. not for 'history/trash file view'\n    let thumbnailURL = '';\n    const fileExtList = ['tif', 'tiff', 'psd'];\n    if (!repoEncrypted && fileExtList.includes(fileExt)) {\n      thumbnailURL = `${siteRoot}thumbnail/${repoID}/${thumbnailSizeForOriginal}${Utils.encodePath(filePath)}`;\n    }\n\n    // for xmind file\n    const xmindSrc = xmindImageSrc ? `${siteRoot}${xmindImageSrc}` : '';\n\n    return (\n      <div className=\"file-view-content flex-1 image-file-view\">\n        {previousImage && (\n          <a href={previousImageUrl} id=\"img-prev\" title={gettext('you can also press ← ')}><span className=\"fas fa-chevron-left\"></span></a>\n        )}\n        {nextImage && (\n          <a href={nextImageUrl} id=\"img-next\" title={gettext('you can also press →')}><span className=\"fas fa-chevron-right\"></span></a>\n        )}\n        <img src={xmindSrc || thumbnailURL || rawPath} alt={fileName} id=\"image-view\" onError={this.handleLoadFailure} />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\n\nimport '../../css/svg-file-view.css';\n\nconst {\n  fileName, rawPath\n} = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 svg-file-view\">\n        <img src={rawPath} alt={fileName} id=\"svg-view\" />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport PDFViewer from '../pdf-viewer';\n\nimport '../../css/pdf-file-view.css';\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 pdf-file-view\">\n        <PDFViewer />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport VideoPlayer from '../video-player';\n\nimport '../../css/video-file-view.css';\n\nconst {\n  rawPath\n} = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    const videoJsOptions = {\n      autoplay: false,\n      controls: true,\n      preload: 'auto',\n      playbackRates: [0.5, 1, 1.5, 2],\n      sources: [{\n        src: rawPath\n      }]\n    };\n    return (\n      <div className=\"file-view-content flex-1 video-file-view\">\n        <VideoPlayer { ...videoJsOptions } />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport AudioPlayer from '../audio-player';\n\nimport '../../css/audio-file-view.css';\n\nconst { rawPath } = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    const videoJsOptions = {\n      autoplay: false,\n      controls: true,\n      preload: 'auto',\n      sources: [{\n        src: rawPath\n      }]\n    };\n    return (\n      <div className=\"file-view-content flex-1 audio-file-view\">\n        <AudioPlayer { ...videoJsOptions } />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n"],"sourceRoot":""}